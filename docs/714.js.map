{"version":3,"file":"714.js","mappings":"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","sources":["./src/app/feature/specialist/data-access/specialist.facade.ts","./src/app/feature/specialist/ui/specialist-page.component.ts","./src/app/feature/specialist/ui/specialist-page.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Clinic } from '../../../shared/data-access/models/clinic.model';\nimport { Doctor } from '../../../shared/data-access/models/doctor.model';\nimport { Review } from '../../../shared/data-access/models/review.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SpecialistFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  getDoctor(id: string): Observable<Doctor | undefined> {\n    return this.api.getDoctorById(id);\n  }\n\n  getClinicForDoctor(doctorId: string): Observable<Clinic | undefined> {\n    return this.getDoctor(doctorId).pipe(\n      switchMap((doctor) => (doctor ? this.api.getClinicById(doctor.clinicId) : this.api.getClinics().pipe(map(() => undefined))))\n    );\n  }\n\n  getReviews(doctorId: string): Observable<Review[]> {\n    return this.api.getReviewsForDoctor(doctorId);\n  }\n\n  getDoctorProfileContext(doctorId: string): Observable<{ doctor?: Doctor; clinic?: Clinic; reviews: Review[] }> {\n    return combineLatest([\n      this.getDoctor(doctorId),\n      this.getClinicForDoctor(doctorId),\n      this.getReviews(doctorId)\n    ]).pipe(\n      map(([doctor, clinic, reviews]) => ({ doctor, clinic, reviews }))\n    );\n  }\n}\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { SpecialistFacade } from '../data-access/specialist.facade';\n\n@Component({\n  selector: 'dr-specialist-page',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    NgIf,\n    NgFor,\n    RouterLink\n  ],\n  templateUrl: './specialist-page.component.html',\n  styleUrls: ['./specialist-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpecialistPageComponent {\n  private readonly route = inject(ActivatedRoute);\n  private readonly facade = inject(SpecialistFacade);\n\n  readonly context$ = this.route.paramMap.pipe(\n    map((params) => params.get('id') ?? ''),\n    switchMap((id) => this.facade.getDoctorProfileContext(id))\n  );\n\n  formatPhoneHref(phone: string): string {\n    return `tel:${phone.replace(/[^\\d+]/g, '')}`;\n  }\n\n  buildMapsLink(address: { street: string; city: string; state: string }): string {\n    const query = `${address.street}, ${address.city}, ${address.state}`;\n    return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(query)}`;\n  }\n}\n","<section class=\"specialist-view\" *ngIf=\"context$ | async as context; else loading\">\n  <div class=\"specialist-view__frame\" *ngIf=\"context.doctor as doctor; else notFound\">\n    <article class=\"specialist-view__card\">\n      <div class=\"specialist-view__media\">\n        <img [src]=\"doctor.avatarUrl\" [alt]=\"doctor.name\" class=\"specialist-view__portrait\" />\n        <span class=\"specialist-view__badge\">specialist</span>\n        <button\n          type=\"button\"\n          class=\"specialist-view__close\"\n          routerLink=\"/search\"\n          aria-label=\"Back to search results\"\n        ></button>\n      </div>\n\n      <div class=\"specialist-view__content\">\n        <header class=\"specialist-view__header\">\n          <h1>{{ doctor.name }}</h1>\n          <p class=\"specialist-view__specialty\">{{ doctor.specialty }}</p>\n          <p class=\"specialist-view__bio\">{{ doctor.biography }}</p>\n        </header>\n\n        <div class=\"specialist-view__contact\" *ngIf=\"context.clinic as clinic\">\n          <a\n            *ngIf=\"clinic.phone\"\n            class=\"specialist-view__action specialist-view__action--primary\"\n            [href]=\"formatPhoneHref(clinic.phone)\"\n          >\n            Call now\n          </a>\n          <a\n            *ngIf=\"clinic.address\"\n            class=\"specialist-view__action specialist-view__action--secondary\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            [href]=\"buildMapsLink(clinic.address)\"\n          >\n            Navigate\n          </a>\n        </div>\n      </div>\n\n      <section class=\"specialist-view__section\" *ngIf=\"doctor.highlights?.length\">\n        <h2>Specializations</h2>\n        <ul>\n          <li *ngFor=\"let highlight of doctor.highlights!\">\n            <span>{{ highlight.label }}</span>\n            <strong>{{ highlight.value }}</strong>\n          </li>\n        </ul>\n      </section>\n    </article>\n  </div>\n</section>\n\n<ng-template #loading>\n  <div class=\"specialist-view__fallback\"><p>Loading profile…</p></div>\n</ng-template>\n\n<ng-template #notFound>\n  <div class=\"specialist-view__fallback\"><p>We could not find this specialist. Try exploring the map.</p></div>\n</ng-template>\n"],"names":["inject","combineLatest","map","switchMap","DocRosterApiService","SpecialistFacade","constructor","api","getDoctor","id","getDoctorById","getClinicForDoctor","doctorId","pipe","doctor","getClinicById","clinicId","getClinics","undefined","getReviews","getReviewsForDoctor","getDoctorProfileContext","clinic","reviews","factory","ɵfac","providedIn","AsyncPipe","NgFor","NgIf","ActivatedRoute","RouterLink","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r1","formatPhoneHref","clinic_r1","phone","ɵɵsanitizeUrl","buildMapsLink","address","ɵɵtemplate","SpecialistPageComponent_section_0_div_1_div_15_a_1_Template","SpecialistPageComponent_section_0_div_1_div_15_a_2_Template","ɵɵadvance","ɵɵtextInterpolate","highlight_r3","label","value","SpecialistPageComponent_section_0_div_1_section_16_li_4_Template","doctor_r4","highlights","ɵɵelement","SpecialistPageComponent_section_0_div_1_div_15_Template","SpecialistPageComponent_section_0_div_1_section_16_Template","avatarUrl","name","specialty","biography","context_r5","length","SpecialistPageComponent_section_0_div_1_Template","notFound_r6","SpecialistPageComponent","route","facade","context$","paramMap","params","get","replace","query","street","city","state","encodeURIComponent","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SpecialistPageComponent_Template","rf","ctx","SpecialistPageComponent_section_0_Template","SpecialistPageComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","SpecialistPageComponent_ng_template_4_Template","ɵɵpipeBind1","loading_r7","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}