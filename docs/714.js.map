{"version":3,"file":"714.js","mappings":"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","sources":["./src/app/feature/specialist/data-access/specialist.facade.ts","./src/app/feature/specialist/ui/specialist-page.component.ts","./src/app/feature/specialist/ui/specialist-page.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Clinic } from '../../../shared/data-access/models/clinic.model';\nimport { Doctor } from '../../../shared/data-access/models/doctor.model';\nimport { Review } from '../../../shared/data-access/models/review.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SpecialistFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  getDoctor(id: string): Observable<Doctor | undefined> {\n    return this.api.getDoctorById(id);\n  }\n\n  getClinicForDoctor(doctorId: string): Observable<Clinic | undefined> {\n    return this.getDoctor(doctorId).pipe(\n      switchMap((doctor) => (doctor ? this.api.getClinicById(doctor.clinicId) : this.api.getClinics().pipe(map(() => undefined))))\n    );\n  }\n\n  getReviews(doctorId: string): Observable<Review[]> {\n    return this.api.getReviewsForDoctor(doctorId);\n  }\n\n  getDoctorProfileContext(doctorId: string): Observable<{ doctor?: Doctor; clinic?: Clinic; reviews: Review[] }> {\n    return combineLatest([\n      this.getDoctor(doctorId),\n      this.getClinicForDoctor(doctorId),\n      this.getReviews(doctorId)\n    ]).pipe(\n      map(([doctor, clinic, reviews]) => ({ doctor, clinic, reviews }))\n    );\n  }\n}\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\nimport { SpecialistFacade } from '../data-access/specialist.facade';\nimport { MapStateService } from '../../../shared/data-access/map-state.service';\n\n@Component({\n    selector: 'dr-specialist-page',\n    standalone: true,\n    imports: [\n        AsyncPipe,\n        NgIf,\n        NgFor,\n        RouterLink\n    ],\n    templateUrl: './specialist-page.component.html',\n    styleUrls: ['./specialist-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpecialistPageComponent {\n  private readonly route = inject(ActivatedRoute);\n  private readonly facade = inject(SpecialistFacade);\n  private readonly mapState = inject(MapStateService);\n\n  readonly context$ = this.route.paramMap.pipe(\n    map((params) => params.get('id') ?? ''),\n    switchMap((id) => this.facade.getDoctorProfileContext(id)),\n    tap((context) => {\n      if (context.doctor) {\n        this.mapState.setActiveDoctor(context.doctor.id);\n      }\n    })\n  );\n\n  formatPhoneHref(phone: string): string {\n    return `tel:${phone.replace(/[^\\d+]/g, '')}`;\n  }\n\n  buildMapsLink(address: { street: string; city: string; state: string }): string {\n    const query = `${address.street}, ${address.city}, ${address.state}`;\n    return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(query)}`;\n  }\n}\n","<section class=\"specialist-panel\" *ngIf=\"context$ | async as context; else loading\">\n  <ng-container *ngIf=\"context.doctor as doctor; else notFound\">\n    <header class=\"specialist-panel__header\">\n      <button type=\"button\" class=\"specialist-panel__close\" routerLink=\"/search\" aria-label=\"Back to search\"></button>\n      <div class=\"specialist-panel__identity\">\n        <img [src]=\"doctor.avatarUrl\" [alt]=\"doctor.name\" />\n        <div>\n          <h1>{{ doctor.name }}</h1>\n          <p>{{ doctor.specialty }}</p>\n        </div>\n      </div>\n    </header>\n\n    <div class=\"specialist-panel__section\">\n      <h2>Biography</h2>\n      <p>{{ doctor.biography }}</p>\n    </div>\n\n    <div class=\"specialist-panel__section\" *ngIf=\"context.clinic as clinic\">\n      <h2>Clinic</h2>\n      <p>\n        {{ clinic.name }}<br />\n        {{ clinic.address.street }}, {{ clinic.address.city }}, {{ clinic.address.state }}\n      </p>\n      <div class=\"specialist-panel__actions\">\n        <a *ngIf=\"clinic.phone\" [href]=\"formatPhoneHref(clinic.phone)\">Call now</a>\n        <a *ngIf=\"clinic.address\" [href]=\"buildMapsLink(clinic.address)\" target=\"_blank\" rel=\"noopener\"\n          >Navigate</a\n        >\n      </div>\n    </div>\n\n    <div class=\"specialist-panel__section\" *ngIf=\"doctor.highlights?.length\">\n      <h2>Specializations</h2>\n      <ul>\n        <li *ngFor=\"let highlight of doctor.highlights!\">\n          <span>{{ highlight.label }}</span>\n          <strong>{{ highlight.value }}</strong>\n        </li>\n      </ul>\n    </div>\n  </ng-container>\n</section>\n\n<ng-template #loading>\n  <div class=\"specialist-panel__fallback\"><p>Loading profileâ€¦</p></div>\n</ng-template>\n\n<ng-template #notFound>\n  <div class=\"specialist-panel__fallback\"><p>We could not find this specialist. Try exploring the map.</p></div>\n</ng-template>\n"],"names":["inject","combineLatest","map","switchMap","DocRosterApiService","SpecialistFacade","constructor","api","getDoctor","id","getDoctorById","getClinicForDoctor","doctorId","pipe","doctor","getClinicById","clinicId","getClinics","undefined","getReviews","getReviewsForDoctor","getDoctorProfileContext","clinic","reviews","_","_staticBlock","factory","Éµfac","providedIn","AsyncPipe","NgFor","NgIf","ActivatedRoute","RouterLink","tap","MapStateService","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµproperty","ctx_r1","formatPhoneHref","clinic_r1","phone","ÉµÉµsanitizeUrl","buildMapsLink","address","ÉµÉµelement","ÉµÉµtemplate","SpecialistPageComponent_section_0_ng_container_1_div_15_a_8_Template","SpecialistPageComponent_section_0_ng_container_1_div_15_a_9_Template","ÉµÉµadvance","ÉµÉµtextInterpolate1","name","ÉµÉµtextInterpolate3","street","city","state","ÉµÉµtextInterpolate","highlight_r3","label","value","SpecialistPageComponent_section_0_ng_container_1_div_16_li_4_Template","doctor_r4","highlights","ÉµÉµelementContainerStart","SpecialistPageComponent_section_0_ng_container_1_div_15_Template","SpecialistPageComponent_section_0_ng_container_1_div_16_Template","avatarUrl","specialty","biography","context_r5","length","SpecialistPageComponent_section_0_ng_container_1_Template","notFound_r6","SpecialistPageComponent","route","facade","mapState","context$","paramMap","params","get","context","setActiveDoctor","replace","query","encodeURIComponent","selectors","decls","vars","consts","template","SpecialistPageComponent_Template","rf","ctx","SpecialistPageComponent_section_0_Template","SpecialistPageComponent_ng_template_2_Template","ÉµÉµtemplateRefExtractor","SpecialistPageComponent_ng_template_4_Template","ÉµÉµpipeBind1","loading_r7","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}