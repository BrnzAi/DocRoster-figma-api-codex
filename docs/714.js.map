{"version":3,"file":"714.js","mappings":"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","sources":["./src/app/feature/specialist/data-access/specialist.facade.ts","./src/app/feature/specialist/ui/specialist-page.component.ts","./src/app/feature/specialist/ui/specialist-page.component.html","./src/app/shared/ui/section-header/section-header.component.ts","./src/app/shared/ui/section-header/section-header.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Clinic } from '../../../shared/data-access/models/clinic.model';\nimport { Doctor } from '../../../shared/data-access/models/doctor.model';\nimport { Review } from '../../../shared/data-access/models/review.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SpecialistFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  getDoctor(id: string): Observable<Doctor | undefined> {\n    return this.api.getDoctorById(id);\n  }\n\n  getClinicForDoctor(doctorId: string): Observable<Clinic | undefined> {\n    return this.getDoctor(doctorId).pipe(\n      switchMap((doctor) => (doctor ? this.api.getClinicById(doctor.clinicId) : this.api.getClinics().pipe(map(() => undefined))))\n    );\n  }\n\n  getReviews(doctorId: string): Observable<Review[]> {\n    return this.api.getReviewsForDoctor(doctorId);\n  }\n\n  getDoctorProfileContext(doctorId: string): Observable<{ doctor?: Doctor; clinic?: Clinic; reviews: Review[] }> {\n    return combineLatest([\n      this.getDoctor(doctorId),\n      this.getClinicForDoctor(doctorId),\n      this.getReviews(doctorId)\n    ]).pipe(\n      map(([doctor, clinic, reviews]) => ({ doctor, clinic, reviews }))\n    );\n  }\n}\n","import { AsyncPipe, DatePipe, DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { ClinicCardComponent } from '../../../shared/ui/clinic-card/clinic-card.component';\nimport { ReviewCardComponent } from '../../../shared/ui/review-card/review-card.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { TagListComponent } from '../../../shared/ui/tag-list/tag-list.component';\nimport { SpecialistFacade } from '../data-access/specialist.facade';\n\n@Component({\n  selector: 'dr-specialist-page',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    NgIf,\n    NgFor,\n    DatePipe,\n    DecimalPipe,\n    SectionHeaderComponent,\n    ClinicCardComponent,\n    ReviewCardComponent,\n    TagListComponent\n  ],\n  templateUrl: './specialist-page.component.html',\n  styleUrls: ['./specialist-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpecialistPageComponent {\n  private readonly route = inject(ActivatedRoute);\n  private readonly facade = inject(SpecialistFacade);\n\n  readonly context$ = this.route.paramMap.pipe(\n    map((params) => params.get('id') ?? ''),\n    switchMap((id) => this.facade.getDoctorProfileContext(id))\n  );\n}\n","<section class=\"specialist section\" *ngIf=\"context$ | async as context; else loading\">\n  <div class=\"container\" *ngIf=\"context.doctor as doctor; else notFound\">\n    <dr-section-header\n      [title]=\"doctor.name\"\n      [subtitle]=\"doctor.biography\"\n      badge=\"Specialist profile\"\n    ></dr-section-header>\n\n    <div class=\"specialist__meta\">\n      <div>\n        <span class=\"specialist__rating\">★ {{ doctor.rating | number: '1.1-1' }} · {{ doctor.reviewCount }} reviews</span>\n        <dr-tag-list [tags]=\"doctor.languages\"></dr-tag-list>\n      </div>\n      <div class=\"specialist__highlights\">\n        <div *ngFor=\"let highlight of doctor.highlights\">\n          <span>{{ highlight.label }}</span>\n          <strong>{{ highlight.value }}</strong>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"specialist__availability\">\n      <h3>Weekly availability</h3>\n      <div class=\"specialist__schedule\">\n        <div *ngFor=\"let slot of doctor.availability\">\n          <span>{{ slot.day }}</span>\n          <strong>{{ slot.times.join(' · ') }}</strong>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"specialist__clinic\" *ngIf=\"context.clinic\">\n      <h3>Care hub</h3>\n      <dr-clinic-card [clinic]=\"context.clinic\" [showActions]=\"false\"></dr-clinic-card>\n    </div>\n\n    <div class=\"specialist__reviews\" *ngIf=\"context.reviews.length\">\n      <h3>Stories from the DocRoster community</h3>\n      <div class=\"specialist__reviews-grid\">\n        <dr-review-card *ngFor=\"let review of context.reviews\" [review]=\"review\"></dr-review-card>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #loading>\n  <div class=\"container section\"><p>Loading profile…</p></div>\n</ng-template>\n\n<ng-template #notFound>\n  <div class=\"container section\"><p>We could not find this specialist. Try exploring the map.</p></div>\n</ng-template>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dr-section-header',\n  standalone: true,\n  imports: [NgIf],\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent {\n  @Input({ required: true }) title!: string;\n  @Input() subtitle?: string;\n  @Input() badge?: string;\n}\n","<div class=\"section-header\">\n  <div class=\"section-header__titles\">\n    <span *ngIf=\"badge\" class=\"section-header__badge\">{{ badge }}</span>\n    <h2 class=\"section-header__title\">{{ title }}</h2>\n    <p *ngIf=\"subtitle\" class=\"section-header__subtitle\">{{ subtitle }}</p>\n  </div>\n  <div class=\"section-header__actions\">\n    <ng-content select=\"[actions]\"></ng-content>\n  </div>\n</div>\n"],"names":["inject","combineLatest","map","switchMap","DocRosterApiService","SpecialistFacade","constructor","api","getDoctor","id","getDoctorById","getClinicForDoctor","doctorId","pipe","doctor","getClinicById","clinicId","getClinics","undefined","getReviews","getReviewsForDoctor","getDoctorProfileContext","clinic","reviews","factory","ɵfac","providedIn","AsyncPipe","DecimalPipe","NgFor","NgIf","ActivatedRoute","ClinicCardComponent","ReviewCardComponent","SectionHeaderComponent","TagListComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","highlight_r1","label","value","slot_r2","day","times","join","ɵɵelement","ɵɵproperty","context_r3","review_r4","ɵɵtemplate","SpecialistPageComponent_section_0_div_1_div_16_dr_review_card_4_Template","SpecialistPageComponent_section_0_div_1_div_9_Template","SpecialistPageComponent_section_0_div_1_div_14_Template","SpecialistPageComponent_section_0_div_1_div_15_Template","SpecialistPageComponent_section_0_div_1_div_16_Template","doctor_r5","name","biography","ɵɵtextInterpolate2","ɵɵpipeBind2","rating","reviewCount","languages","highlights","availability","length","SpecialistPageComponent_section_0_div_1_Template","notFound_r6","SpecialistPageComponent","route","facade","context$","paramMap","params","get","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SpecialistPageComponent_Template","rf","ctx","SpecialistPageComponent_section_0_Template","SpecialistPageComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","SpecialistPageComponent_ng_template_4_Template","ɵɵpipeBind1","loading_r7","styles","changeDetection","ctx_r0","badge","subtitle","inputs","title","ngContentSelectors","_c1","SectionHeaderComponent_Template","SectionHeaderComponent_span_2_Template","SectionHeaderComponent_p_5_Template","ɵɵprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}