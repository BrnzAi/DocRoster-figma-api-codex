{"version":3,"file":"187.js","mappings":"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","sources":["./src/app/feature/auth/ui/login-page.component.ts","./src/app/feature/auth/ui/login-page.component.html"],"sourcesContent":["import { AsyncPipe, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { AuthFacade } from '../data-access/auth.facade';\n\n@Component({\n  selector: 'dr-login-page',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterLink, NgIf, AsyncPipe],\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthFacade);\n  private readonly router = inject(Router);\n\n  readonly status = signal<'idle' | 'pending' | 'success' | 'error'>('idle');\n  readonly errorMessage = computed(() => this.auth.lastError());\n\n  readonly form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    remember: [true]\n  });\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'pending') {\n      return;\n    }\n    this.status.set('pending');\n    this.auth.login(this.form.getRawValue()).subscribe({\n      next: () => {\n        this.status.set('success');\n        this.router.navigate(['/profile']);\n      },\n      error: () => {\n        this.status.set('error');\n      }\n    });\n  }\n}\n","<section class=\"auth section\">\n  <div class=\"container auth__container\">\n    <h1>Welcome back to DocRoster</h1>\n    <p class=\"auth__lead\">Sign in to continue curating assessments, specialists and network pilots.</p>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"auth__form\">\n      <label>\n        Email address\n        <input type=\"email\" formControlName=\"email\" placeholder=\"you@example.com\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Minimum 6 characters\" />\n      </label>\n      <label class=\"auth__remember\">\n        <input type=\"checkbox\" formControlName=\"remember\" />\n        Remember me on this device\n      </label>\n\n      <button class=\"button\" type=\"submit\" [disabled]=\"status() === 'pending'\">\n        {{ status() === 'pending' ? 'Signing in…' : 'Sign in' }}\n      </button>\n\n      <p class=\"auth__error\" *ngIf=\"status() === 'error'\">{{ errorMessage() }}</p>\n      <p class=\"auth__success\" *ngIf=\"status() === 'success'\">Signed in — redirecting…</p>\n    </form>\n\n    <div class=\"auth__links\">\n      <a routerLink=\"/auth/recover\">Forgot password?</a>\n      <a routerLink=\"/auth/register\">Create an account</a>\n    </div>\n  </div>\n</section>\n"],"names":["NgIf","computed","inject","signal","FormBuilder","ReactiveFormsModule","Validators","Router","RouterLink","AuthFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginPageComponent","constructor","fb","auth","router","status","lastError","form","nonNullable","group","email","required","password","minLength","remember","submit","invalid","set","login","getRawValue","subscribe","next","navigate","error","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵtemplate","LoginPageComponent_p_18_Template","LoginPageComponent_p_19_Template","ɵɵproperty","ɵɵtextInterpolate1","i1","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}