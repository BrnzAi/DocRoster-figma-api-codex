{"version":3,"file":"187.js","mappings":"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","sources":["./src/app/feature/auth/ui/login-page.component.ts","./src/app/feature/auth/ui/login-page.component.html"],"sourcesContent":["import { AsyncPipe, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { AuthFacade } from '../data-access/auth.facade';\n\n@Component({\n  selector: 'dr-login-page',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterLink, NgIf, AsyncPipe],\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthFacade);\n  private readonly router = inject(Router);\n\n  readonly status = signal<'idle' | 'pending' | 'success' | 'error'>('idle');\n  readonly errorMessage = computed(() => this.auth.lastError());\n  private readonly submitted = signal(false);\n\n  readonly form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    remember: [false]\n  });\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'pending') {\n      this.submitted.set(true);\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.submitted.set(true);\n    this.status.set('pending');\n    this.auth.login(this.form.getRawValue()).subscribe({\n      next: () => {\n        this.status.set('success');\n        this.router.navigate(['/search']);\n      },\n      error: () => {\n        this.status.set('error');\n      }\n    });\n  }\n\n  isEmailInvalid(): boolean {\n    const control = this.form.controls.email;\n    return control.invalid && (control.dirty || control.touched || this.submitted());\n  }\n\n  isPasswordInvalid(): boolean {\n    const control = this.form.controls.password;\n    return control.invalid && (control.dirty || control.touched || this.submitted());\n  }\n\n  showValidationErrors(): boolean {\n    return this.submitted() && this.form.invalid;\n  }\n\n  openRecovery(): void {\n    this.router.navigate(['/auth/recover']);\n  }\n}\n","<section class=\"auth auth--login\">\n  <div class=\"auth__frame\">\n    <img src=\"assets/figma/login/background-large.png\" alt=\"\" class=\"auth__frame-bg\" aria-hidden=\"true\" />\n    <div class=\"auth__card\">\n      <div class=\"auth__card-map\" aria-hidden=\"true\"></div>\n\n      <button type=\"button\" class=\"auth__provider auth__provider--google\" aria-label=\"Sign in with Google\">\n        <img src=\"assets/figma/login/google.png\" alt=\"\" class=\"auth__provider-icon\" />\n        <span class=\"auth__provider-label\">Sign in</span>\n      </button>\n\n      <button type=\"button\" class=\"auth__provider auth__provider--apple\" aria-label=\"Sign in with Apple\">\n        <img src=\"assets/figma/login/apple.png\" alt=\"\" class=\"auth__provider-icon\" />\n        <span class=\"auth__provider-label\">Sign in</span>\n      </button>\n\n      <div class=\"auth__divider\" aria-hidden=\"true\">\n        <span class=\"auth__divider-line auth__divider-line--left\"></span>\n        <span class=\"auth__divider-label\">OR</span>\n        <span class=\"auth__divider-line auth__divider-line--right\"></span>\n      </div>\n\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"auth__form\" novalidate>\n        <p class=\"auth__form-error\" *ngIf=\"showValidationErrors()\">Please enter a valid email and password.</p>\n\n        <label class=\"auth__field auth__field--email\" [class.auth__field--invalid]=\"isEmailInvalid()\">\n          <input\n            type=\"email\"\n            formControlName=\"email\"\n            placeholder=\"Email address\"\n            autocomplete=\"email\"\n            [attr.aria-invalid]=\"isEmailInvalid()\"\n            aria-describedby=\"auth-email-error\"\n          />\n        </label>\n\n        <label class=\"auth__field auth__field--password\" [class.auth__field--invalid]=\"isPasswordInvalid()\">\n          <input\n            type=\"password\"\n            formControlName=\"password\"\n            placeholder=\"Password\"\n            autocomplete=\"current-password\"\n            [attr.aria-invalid]=\"isPasswordInvalid()\"\n            aria-describedby=\"auth-password-error\"\n          />\n          <button type=\"button\" class=\"auth__field-help\" aria-label=\"Forgot password?\" (click)=\"openRecovery()\">\n            <img src=\"assets/figma/login/help.png\" alt=\"\" />\n          </button>\n        </label>\n\n        <button class=\"auth__submit\" type=\"submit\" [disabled]=\"status() === 'pending'\">\n          <span>{{ status() === 'pending' ? 'Signing in…' : 'Sign in to DocRoster' }}</span>\n        </button>\n\n        <p id=\"auth-email-error\" class=\"auth__field-message\" *ngIf=\"isEmailInvalid()\">Enter a valid email.</p>\n        <p id=\"auth-password-error\" class=\"auth__field-message auth__field-message--password\" *ngIf=\"isPasswordInvalid()\">Password must be at least 6 characters.</p>\n\n        <p class=\"auth__form-status auth__form-status--error\" *ngIf=\"status() === 'error'\">{{ errorMessage() }}</p>\n        <p class=\"auth__form-status auth__form-status--success\" *ngIf=\"status() === 'success'\">Signed in — redirecting…</p>\n      </form>\n\n      <p class=\"auth__footnote\">\n        <span>Does not have an account? </span>\n        <a routerLink=\"/auth/register\">Register now!</a>\n      </p>\n    </div>\n  </div>\n</section>\n"],"names":["NgIf","computed","inject","signal","FormBuilder","ReactiveFormsModule","Validators","Router","RouterLink","AuthFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginPageComponent","constructor","fb","auth","router","status","lastError","submitted","form","nonNullable","group","email","required","password","minLength","remember","submit","invalid","set","markAllAsTouched","login","getRawValue","subscribe","next","navigate","error","isEmailInvalid","control","controls","dirty","touched","isPasswordInvalid","showValidationErrors","openRecovery","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_18_listener","ɵɵtemplate","LoginPageComponent_p_19_Template","LoginPageComponent_Template_button_click_24_listener","LoginPageComponent_p_29_Template","LoginPageComponent_p_30_Template","LoginPageComponent_p_31_Template","LoginPageComponent_p_32_Template","ɵɵproperty","ɵɵclassProp","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}