{"version":3,"file":"50.js","mappings":"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","sources":["./src/app/feature/upload/data-access/upload.facade.ts","./src/app/feature/upload/ui/upload-page.component.ts","./src/app/feature/upload/ui/upload-page.component.html","./src/app/shared/ui/section-header/section-header.component.ts","./src/app/shared/ui/section-header/section-header.component.html"],"sourcesContent":["import { Injectable, computed, inject, signal } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\n\nimport { MockHttpClientService } from '../../../shared/data-access/mock-http-client.service';\n\nexport interface UploadRequest {\n  title: string;\n  organization: string;\n  category: string;\n  summary: string;\n  fileName: string;\n}\n\nexport interface UploadResult {\n  id: string;\n  nextStep: string;\n  eta: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class UploadFacade {\n  private readonly http = inject(MockHttpClientService);\n  private readonly progressSignal = signal(0);\n  private readonly uploadingSignal = signal(false);\n\n  readonly progress = computed(() => this.progressSignal());\n  readonly isUploading = computed(() => this.uploadingSignal());\n\n  upload(request: UploadRequest): Observable<UploadResult> {\n    this.uploadingSignal.set(true);\n    this.progressSignal.set(30);\n\n    return this.http\n      .mutate(() => {\n        this.progressSignal.set(85);\n        const result: UploadResult = {\n          id: `upload-${crypto.randomUUID()}`,\n          nextStep: `Our clinical review team will audit ${request.title} and structure the submission.`,\n          eta: '24 business hours'\n        };\n        return result;\n      }, 450)\n      .pipe(\n        tap(() => this.progressSignal.set(100)),\n        finalize(() => this.uploadingSignal.set(false))\n      );\n  }\n\n  reset(): void {\n    this.progressSignal.set(0);\n    this.uploadingSignal.set(false);\n  }\n}\n","import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { UploadFacade } from '../data-access/upload.facade';\n\n@Component({\n  selector: 'dr-upload-page',\n  standalone: true,\n  imports: [ReactiveFormsModule, NgIf, SectionHeaderComponent],\n  templateUrl: './upload-page.component.html',\n  styleUrls: ['./upload-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly facade = inject(UploadFacade);\n\n  readonly form = this.fb.nonNullable.group({\n    title: ['', [Validators.required, Validators.minLength(4)]],\n    organization: ['', Validators.required],\n    category: ['', Validators.required],\n    summary: ['', [Validators.required, Validators.minLength(12)]],\n    fileName: ['', Validators.required]\n  });\n  readonly status = signal<'idle' | 'uploading' | 'complete' | 'error'>('idle');\n  readonly progress = this.facade.progress;\n  readonly isUploading = this.facade.isUploading;\n  readonly result = signal<string | null>(null);\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'uploading') {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.status.set('uploading');\n    this.facade.upload(this.form.getRawValue()).subscribe({\n      next: (response) => {\n        this.status.set('complete');\n        this.result.set(`Submission ${response.id} queued Â· ${response.nextStep} (ETA ${response.eta})`);\n        this.form.reset({ title: '', organization: '', category: '', summary: '', fileName: '' });\n      },\n      error: (error: Error) => {\n        this.status.set('error');\n        this.result.set(error.message);\n      }\n    });\n  }\n}\n","<section class=\"upload section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Upload organization assessments\"\n      subtitle=\"Share structured assessments, readiness scans or checklists with the DocRoster review team.\"\n      badge=\"Uploader\"\n    ></dr-section-header>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"upload__form\">\n      <label>\n        Title\n        <input type=\"text\" formControlName=\"title\" placeholder=\"Northstar Quality Sprint\" />\n      </label>\n      <label>\n        Organization\n        <input type=\"text\" formControlName=\"organization\" placeholder=\"Northstar Health Alliance\" />\n      </label>\n      <label>\n        Category\n        <input type=\"text\" formControlName=\"category\" placeholder=\"Care coordination\" />\n      </label>\n      <label>\n        Summary\n        <textarea formControlName=\"summary\" rows=\"4\" placeholder=\"Outline the goal, scope and next actions\"></textarea>\n      </label>\n      <label>\n        File name (mock)\n        <input type=\"text\" formControlName=\"fileName\" placeholder=\"assessment.pdf\" />\n      </label>\n\n      <button class=\"button\" type=\"submit\" [disabled]=\"isUploading()\">\n        {{ isUploading() ? 'Uploadingâ¦' : 'Submit for review' }}\n      </button>\n\n      <div class=\"upload__progress\" *ngIf=\"isUploading()\">\n        <span>Progress: {{ progress() }}%</span>\n      </div>\n\n      <p class=\"upload__message\" *ngIf=\"status() === 'complete'\">{{ result() }}</p>\n      <p class=\"upload__error\" *ngIf=\"status() === 'error'\">{{ result() }}</p>\n    </form>\n  </div>\n</section>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dr-section-header',\n  standalone: true,\n  imports: [NgIf],\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent {\n  @Input({ required: true }) title!: string;\n  @Input() subtitle?: string;\n  @Input() badge?: string;\n}\n","<div class=\"section-header\">\n  <div class=\"section-header__titles\">\n    <span *ngIf=\"badge\" class=\"section-header__badge\">{{ badge }}</span>\n    <h2 class=\"section-header__title\">{{ title }}</h2>\n    <p *ngIf=\"subtitle\" class=\"section-header__subtitle\">{{ subtitle }}</p>\n  </div>\n  <div class=\"section-header__actions\">\n    <ng-content select=\"[actions]\"></ng-content>\n  </div>\n</div>\n"],"names":["computed","inject","signal","finalize","tap","MockHttpClientService","UploadFacade","constructor","http","progressSignal","uploadingSignal","progress","isUploading","upload","request","set","mutate","result","id","crypto","randomUUID","nextStep","title","eta","pipe","reset","factory","Éµfac","providedIn","NgIf","FormBuilder","ReactiveFormsModule","Validators","SectionHeaderComponent","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate1","ctx_r0","ÉµÉµtextInterpolate","UploadPageComponent","fb","facade","form","nonNullable","group","required","minLength","organization","category","summary","fileName","status","submit","invalid","markAllAsTouched","getRawValue","subscribe","next","response","error","message","selectors","standalone","features","ÉµÉµStandaloneFeature","decls","vars","consts","template","UploadPageComponent_Template","rf","ctx","ÉµÉµelement","ÉµÉµlistener","UploadPageComponent_Template_form_ngSubmit_3_listener","ÉµÉµtemplate","UploadPageComponent_div_21_Template","UploadPageComponent_p_22_Template","UploadPageComponent_p_23_Template","ÉµÉµproperty","i1","ÉµNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection","badge","subtitle","inputs","ngContentSelectors","_c1","SectionHeaderComponent_Template","SectionHeaderComponent_span_2_Template","SectionHeaderComponent_p_5_Template","ÉµÉµprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}