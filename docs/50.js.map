{"version":3,"file":"50.js","mappings":"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","sources":["./src/app/feature/upload/data-access/upload.facade.ts","./src/app/feature/upload/ui/upload-page.component.ts","./src/app/feature/upload/ui/upload-page.component.html","./src/app/shared/ui/section-header/section-header.component.ts","./src/app/shared/ui/section-header/section-header.component.html"],"sourcesContent":["import { Injectable, computed, inject, signal } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\n\nimport { MockHttpClientService } from '../../../shared/data-access/mock-http-client.service';\n\nexport interface UploadRequest {\n  title: string;\n  organization: string;\n  category: string;\n  summary: string;\n  fileName: string;\n}\n\nexport interface UploadResult {\n  id: string;\n  nextStep: string;\n  eta: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class UploadFacade {\n  private readonly http = inject(MockHttpClientService);\n  private readonly progressSignal = signal(0);\n  private readonly uploadingSignal = signal(false);\n\n  readonly progress = computed(() => this.progressSignal());\n  readonly isUploading = computed(() => this.uploadingSignal());\n\n  upload(request: UploadRequest): Observable<UploadResult> {\n    this.uploadingSignal.set(true);\n    this.progressSignal.set(30);\n\n    return this.http\n      .mutate(() => {\n        this.progressSignal.set(85);\n        const result: UploadResult = {\n          id: `upload-${crypto.randomUUID()}`,\n          nextStep: `Our clinical review team will audit ${request.title} and structure the submission.`,\n          eta: '24 business hours'\n        };\n        return result;\n      }, 450)\n      .pipe(\n        tap(() => this.progressSignal.set(100)),\n        finalize(() => this.uploadingSignal.set(false))\n      );\n  }\n\n  reset(): void {\n    this.progressSignal.set(0);\n    this.uploadingSignal.set(false);\n  }\n}\n","import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\n\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { UploadFacade } from '../data-access/upload.facade';\n\n@Component({\n    selector: 'dr-upload-page',\n    standalone: true,\n    imports: [ReactiveFormsModule, NgIf, SectionHeaderComponent],\n    templateUrl: './upload-page.component.html',\n    styleUrls: ['./upload-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly facade = inject(UploadFacade);\n\n  readonly form = this.fb.nonNullable.group({\n    title: ['', [Validators.required, Validators.minLength(4)]],\n    organization: ['', Validators.required],\n    category: ['', Validators.required],\n    summary: ['', [Validators.required, Validators.minLength(12)]],\n    fileName: ['', Validators.required]\n  });\n  readonly status = signal<'idle' | 'uploading' | 'complete' | 'error'>('idle');\n  readonly progress = this.facade.progress;\n  readonly isUploading = this.facade.isUploading;\n  readonly result = signal<string | null>(null);\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'uploading') {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.status.set('uploading');\n    this.facade.upload(this.form.getRawValue()).subscribe({\n      next: (response) => {\n        this.status.set('complete');\n        this.result.set(`Submission ${response.id} queued Â· ${response.nextStep} (ETA ${response.eta})`);\n        this.form.reset({ title: '', organization: '', category: '', summary: '', fileName: '' });\n      },\n      error: (error: Error) => {\n        this.status.set('error');\n        this.result.set(error.message);\n      }\n    });\n  }\n}\n","<section class=\"upload section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Upload organization assessments\"\n      subtitle=\"Share structured assessments, readiness scans or checklists with the DocRoster review team.\"\n      badge=\"Uploader\"\n    ></dr-section-header>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"upload__form\">\n      <label>\n        Title\n        <input type=\"text\" formControlName=\"title\" placeholder=\"Northstar Quality Sprint\" />\n      </label>\n      <label>\n        Organization\n        <input type=\"text\" formControlName=\"organization\" placeholder=\"Northstar Health Alliance\" />\n      </label>\n      <label>\n        Category\n        <input type=\"text\" formControlName=\"category\" placeholder=\"Care coordination\" />\n      </label>\n      <label>\n        Summary\n        <textarea formControlName=\"summary\" rows=\"4\" placeholder=\"Outline the goal, scope and next actions\"></textarea>\n      </label>\n      <label>\n        File name (mock)\n        <input type=\"text\" formControlName=\"fileName\" placeholder=\"assessment.pdf\" />\n      </label>\n\n      <button class=\"button\" type=\"submit\" [disabled]=\"isUploading()\">\n        {{ isUploading() ? 'Uploadingâ¦' : 'Submit for review' }}\n      </button>\n\n      <div class=\"upload__progress\" *ngIf=\"isUploading()\">\n        <span>Progress: {{ progress() }}%</span>\n      </div>\n\n      <p class=\"upload__message\" *ngIf=\"status() === 'complete'\">{{ result() }}</p>\n      <p class=\"upload__error\" *ngIf=\"status() === 'error'\">{{ result() }}</p>\n    </form>\n  </div>\n</section>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'dr-section-header',\n    standalone: true,\n    imports: [NgIf],\n    templateUrl: './section-header.component.html',\n    styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent {\n  @Input({ required: true }) title!: string;\n  @Input() subtitle?: string;\n  @Input() badge?: string;\n}\n","<div class=\"section-header\">\n  <div class=\"section-header__titles\">\n    <span *ngIf=\"badge\" class=\"section-header__badge\">{{ badge }}</span>\n    <h2 class=\"section-header__title\">{{ title }}</h2>\n    <p *ngIf=\"subtitle\" class=\"section-header__subtitle\">{{ subtitle }}</p>\n  </div>\n  <div class=\"section-header__actions\">\n    <ng-content select=\"[actions]\"></ng-content>\n  </div>\n</div>\n"],"names":["computed","inject","signal","finalize","tap","MockHttpClientService","UploadFacade","constructor","http","progressSignal","ngDevMode","debugName","uploadingSignal","progress","isUploading","upload","request","set","mutate","result","id","crypto","randomUUID","nextStep","title","eta","pipe","reset","_","_staticBlock","factory","Éµfac","providedIn","NgIf","FormBuilder","ReactiveFormsModule","Validators","SectionHeaderComponent","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate1","ctx_r0","ÉµÉµtextInterpolate","UploadPageComponent","fb","facade","form","nonNullable","group","required","minLength","organization","category","summary","fileName","status","submit","invalid","markAllAsTouched","getRawValue","subscribe","next","response","error","message","selectors","decls","vars","consts","template","UploadPageComponent_Template","rf","ctx","ÉµÉµelement","ÉµÉµlistener","UploadPageComponent_Template_form_ngSubmit_3_listener","ÉµÉµtemplate","UploadPageComponent_div_21_Template","UploadPageComponent_p_22_Template","UploadPageComponent_p_23_Template","ÉµÉµproperty","i1","ÉµNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection","badge","subtitle","inputs","ngContentSelectors","_c1","SectionHeaderComponent_Template","SectionHeaderComponent_span_2_Template","SectionHeaderComponent_p_5_Template","ÉµÉµprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}