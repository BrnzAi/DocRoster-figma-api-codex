{"version":3,"file":"488.js","mappings":"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","sources":["./src/app/feature/profile/data-access/profile.facade.ts","./src/app/feature/profile/ui/profile-page.component.ts","./src/app/feature/profile/ui/profile-page.component.html"],"sourcesContent":["import { Injectable, computed, inject, signal } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { toObservable } from '@angular/core/rxjs-interop';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { UserProfile } from '../../../shared/data-access/models/user-profile.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileFacade {\n  private readonly api = inject(DocRosterApiService);\n  private readonly savingNotificationPreference = signal(false);\n  private readonly profileSignal = signal<UserProfile | null>(null);\n  readonly profile$ = toObservable(this.profileSignal);\n  readonly isSaving = computed(() => this.savingNotificationPreference());\n\n  constructor() {\n    this.api.getUserProfile().subscribe((profile) => this.profileSignal.set(profile));\n  }\n\n  updateNotificationPreference(enabled: boolean): Observable<UserProfile> {\n    this.savingNotificationPreference.set(true);\n    return this.api.updateNotificationPreference(enabled).pipe(\n      tap((profile) => this.profileSignal.set(profile)),\n      finalize(() => this.savingNotificationPreference.set(false))\n    );\n  }\n}\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { ProfileFacade } from '../data-access/profile.facade';\n\n@Component({\n  selector: 'dr-profile-page',\n  standalone: true,\n  imports: [AsyncPipe, NgIf, NgFor, RouterLink],\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfilePageComponent {\n  private readonly facade = inject(ProfileFacade);\n  private readonly api = inject(DocRosterApiService);\n\n  readonly vm$ = combineLatest([this.facade.profile$, this.api.getDoctors()]).pipe(\n    map(([profile, doctors]) => ({\n      profile,\n      specialists: doctors.slice(0, 4).map((doctor, index) => ({\n        doctor,\n        avatar: PROFILE_AVATARS[index % PROFILE_AVATARS.length],\n        schedule: formatSchedule(doctor.availability?.[0])\n      }))\n    }))\n  );\n  readonly isSaving = this.facade.isSaving;\n\n  onToggleNotifications(enabled: boolean): void {\n    this.facade.updateNotificationPreference(enabled).subscribe();\n  }\n}\n\nconst PROFILE_AVATARS = [\n  'assets/figma/profile/1814_506.png',\n  'assets/figma/profile/1814_521.png',\n  'assets/figma/profile/1814_536.png',\n  'assets/figma/profile/1814_551.png'\n];\n\nfunction formatSchedule(entry?: { day: string; times: string[] }): string {\n  if (!entry) {\n    return '';\n  }\n  const firstTime = entry.times?.[0] ?? '';\n  return `${entry.day}${firstTime ? ' Â· ' + firstTime : ''}`;\n}\n","<section class=\"profile-view\" *ngIf=\"vm$ | async as vm\">\n  <div class=\"profile-view__frame\">\n    <div class=\"profile-view__card\">\n      <img src=\"assets/figma/profile/1814_483.png\" alt=\"Organization logo\" class=\"profile-view__hero\" />\n\n      <div class=\"profile-view__header-actions\">\n        <button type=\"button\" aria-label=\"Edit profile\" class=\"profile-view__icon profile-view__icon--edit\"></button>\n        <span class=\"profile-view__header-divider\" aria-hidden=\"true\"></span>\n        <button type=\"button\" aria-label=\"Logout\" class=\"profile-view__icon profile-view__icon--logout\"></button>\n      </div>\n\n      <button type=\"button\" class=\"profile-view__close\" routerLink=\"/search\" aria-label=\"Back to search\"></button>\n\n      <div class=\"profile-view__summary\">\n        <h1>{{ vm.profile?.name }}</h1>\n        <div class=\"profile-view__contact\">\n          <a *ngIf=\"vm.profile\" [href]=\"'mailto:' + vm.profile.email\">{{ vm.profile.email }}</a>\n          <a *ngIf=\"vm.profile?.phone\" [href]=\"'tel:' + vm.profile?.phone\">{{ vm.profile?.phone }}</a>\n        </div>\n      </div>\n\n      <hr class=\"profile-view__divider\" />\n\n      <section class=\"profile-view__stats\">\n        <h2>Statistics</h2>\n        <div class=\"profile-view__stats-grid\">\n          <div class=\"profile-view__stat\">\n            <span class=\"profile-view__stat-value\">503</span>\n            <span class=\"profile-view__stat-label\">Total active pins</span>\n          </div>\n          <div class=\"profile-view__stat\">\n            <span class=\"profile-view__stat-value\">11</span>\n            <span class=\"profile-view__stat-label\">Added in 30 d.</span>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"profile-view__specialists\">\n        <header>\n          <h2>Your specialists</h2>\n          <button type=\"button\" class=\"profile-view__add\">\n            <span class=\"profile-view__add-icon\"></span>\n            <span>Add</span>\n          </button>\n        </header>\n        <ul>\n          <li *ngFor=\"let specialist of vm.specialists\">\n            <img [src]=\"specialist.avatar\" [alt]=\"specialist.doctor.name\" />\n            <div>\n              <h3>{{ specialist.doctor.name }}</h3>\n              <p>{{ specialist.doctor.specialty }}</p>\n              <p>{{ specialist.schedule }}</p>\n            </div>\n            <div class=\"profile-view__result-actions\">\n              <button type=\"button\" aria-label=\"Edit specialist\" class=\"profile-view__icon profile-view__icon--edit\"></button>\n              <button type=\"button\" aria-label=\"Remove specialist\" class=\"profile-view__icon profile-view__icon--delete\"></button>\n            </div>\n          </li>\n        </ul>\n      </section>\n    </div>\n  </div>\n</section>\n"],"names":["computed","inject","signal","finalize","tap","toObservable","DocRosterApiService","ProfileFacade","constructor","api","savingNotificationPreference","profileSignal","profile$","isSaving","getUserProfile","subscribe","profile","set","updateNotificationPreference","enabled","pipe","factory","Éµfac","providedIn","AsyncPipe","NgFor","NgIf","RouterLink","combineLatest","map","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµproperty","vm_r1","email","ÉµÉµsanitizeUrl","ÉµÉµadvance","ÉµÉµtextInterpolate","phone","ÉµÉµelement","specialist_r2","avatar","doctor","name","specialty","schedule","ÉµÉµtemplate","ProfilePageComponent_section_0_a_13_Template","ProfilePageComponent_section_0_a_14_Template","ProfilePageComponent_section_0_li_39_Template","specialists","ProfilePageComponent","facade","vm$","getDoctors","doctors","slice","index","PROFILE_AVATARS","length","formatSchedule","availability","onToggleNotifications","selectors","standalone","features","ÉµÉµStandaloneFeature","decls","vars","consts","template","ProfilePageComponent_Template","rf","ctx","ProfilePageComponent_section_0_Template","ÉµÉµpipeBind1","styles","changeDetection","entry","firstTime","times","day"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}