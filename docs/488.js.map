{"version":3,"file":"488.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyD;AACkB;AAC9B;AACR;AACA;AAE6C;AACpB;;;;ICSpDS,4DAAA,YAA4D;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAI;;;;IAAhEA,wDAAA,qBAAAK,KAAA,CAAAC,OAAA,CAAAC,KAAA,EAAAP,2DAAA,CAAqC;IAACA,uDAAA,EAAsB;IAAtBA,+DAAA,CAAAK,KAAA,CAAAC,OAAA,CAAAC,KAAA,CAAsB;;;;;IAClFP,4DAAA,YAAiE;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAI;;;;IAA/DA,wDAAA,mBAAAK,KAAA,CAAAC,OAAA,kBAAAD,KAAA,CAAAC,OAAA,CAAAK,KAAA,GAAAX,2DAAA,CAAmC;IAACA,uDAAA,EAAuB;IAAvBA,+DAAA,CAAAK,KAAA,CAAAC,OAAA,kBAAAD,KAAA,CAAAC,OAAA,CAAAK,KAAA,CAAuB;;;;;IA6BxFX,4DAAA,SAA8C;IAC5CA,uDAAA,cAAgE;IAE9DA,4DADF,UAAK,SACC;IAAAA,oDAAA,GAA4B;IAAAA,0DAAA,EAAK;IACrCA,4DAAA,QAAG;IAAAA,oDAAA,GAAiC;IAAAA,0DAAA,EAAI;IACxCA,4DAAA,QAAG;IAAAA,oDAAA,GAAyB;IAC9BA,0DAD8B,EAAI,EAC5B;IACNA,4DAAA,cAA0C;IAExCA,uDADA,kBAAgH,kBACI;IAExHA,0DADE,EAAM,EACH;;;;IAVEA,uDAAA,EAAyB;IAACA,wDAA1B,QAAAa,aAAA,CAAAC,MAAA,EAAAd,2DAAA,CAAyB,QAAAa,aAAA,CAAAE,MAAA,CAAAC,IAAA,CAA+B;IAEvDhB,uDAAA,GAA4B;IAA5BA,+DAAA,CAAAa,aAAA,CAAAE,MAAA,CAAAC,IAAA,CAA4B;IAC7BhB,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAa,aAAA,CAAAE,MAAA,CAAAE,SAAA,CAAiC;IACjCjB,uDAAA,GAAyB;IAAzBA,+DAAA,CAAAa,aAAA,CAAAK,QAAA,CAAyB;;;;;IAjDtClB,4DAFJ,iBAAwD,aACrB,aACC;IAC9BA,uDAAA,aAAkG;IAElGA,4DAAA,aAA0C;IAGxCA,uDAFA,gBAA6G,cACxC,gBACoC;IAC3GA,0DAAA,EAAM;IAENA,uDAAA,gBAA4G;IAG1GA,4DADF,cAAmC,UAC7B;IAAAA,oDAAA,IAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,eAAmC;IAEjCA,wDADA,KAAAoB,4CAAA,gBAA4D,KAAAC,4CAAA,gBACK;IAErErB,0DADE,EAAM,EACF;IAENA,uDAAA,cAAoC;IAGlCA,4DADF,mBAAqC,UAC/B;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAK;IAGfA,4DAFJ,eAAsC,eACJ,gBACS;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAO;IACjDA,4DAAA,gBAAuC;IAAAA,oDAAA,yBAAiB;IAC1DA,0DAD0D,EAAO,EAC3D;IAEJA,4DADF,eAAgC,gBACS;IAAAA,oDAAA,UAAE;IAAAA,0DAAA,EAAO;IAChDA,4DAAA,gBAAuC;IAAAA,oDAAA,sBAAc;IAG3DA,0DAH2D,EAAO,EACxD,EACF,EACE;IAINA,4DAFJ,mBAA2C,cACjC,UACF;IAAAA,oDAAA,wBAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,kBAAgD;IAC9CA,uDAAA,gBAA4C;IAC5CA,4DAAA,YAAM;IAAAA,oDAAA,WAAG;IAEbA,0DAFa,EAAO,EACT,EACF;IACTA,4DAAA,UAAI;IACFA,wDAAA,KAAAsB,6CAAA,kBAA8C;IAgBxDtB,0DAJQ,EAAK,EACG,EACN,EACF,EACE;;;;IAhDEA,uDAAA,IAAsB;IAAtBA,+DAAA,CAAAK,KAAA,CAAAC,OAAA,kBAAAD,KAAA,CAAAC,OAAA,CAAAU,IAAA,CAAsB;IAEpBhB,uDAAA,GAAgB;IAAhBA,wDAAA,SAAAK,KAAA,CAAAC,OAAA,CAAgB;IAChBN,uDAAA,EAAuB;IAAvBA,wDAAA,SAAAK,KAAA,CAAAC,OAAA,kBAAAD,KAAA,CAAAC,OAAA,CAAAK,KAAA,CAAuB;IA6BAX,uDAAA,IAAiB;IAAjBA,wDAAA,YAAAK,KAAA,CAAAkB,WAAA,CAAiB;;;AD7BhD,MAAOC,oBAAoB;EARjCC,YAAA;IASmB,KAAAC,MAAM,GAAGhC,qDAAM,CAACK,sEAAa,CAAC;IAC9B,KAAA4B,GAAG,GAAGjC,qDAAM,CAACI,oFAAmB,CAAC;IAEzC,KAAA8B,GAAG,GAAGhC,mDAAa,CAAC,CAAC,IAAI,CAAC8B,MAAM,CAACG,QAAQ,EAAE,IAAI,CAACF,GAAG,CAACG,UAAU,EAAE,CAAC,CAAC,CAACC,IAAI,CAC9ElC,mDAAG,CAAC,CAAC,CAACS,OAAO,EAAE0B,OAAO,CAAC,MAAM;MAC3B1B,OAAO;MACPiB,WAAW,EAAES,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACpC,GAAG,CAAC,CAACkB,MAAM,EAAEmB,KAAK,MAAM;QACvDnB,MAAM;QACND,MAAM,EAAEqB,eAAe,CAACD,KAAK,GAAGC,eAAe,CAACC,MAAM,CAAC;QACvDlB,QAAQ,EAAEmB,cAAc,CAACtB,MAAM,CAACuB,YAAY,GAAG,CAAC,CAAC;OAClD,CAAC;KACH,CAAC,CAAC,CACJ;IACQ,KAAAC,QAAQ,GAAG,IAAI,CAACb,MAAM,CAACa,QAAQ;;EAExCC,qBAAqBA,CAACC,OAAgB;IACpC,IAAI,CAACf,MAAM,CAACgB,4BAA4B,CAACD,OAAO,CAAC,CAACE,SAAS,EAAE;EAC/D;EAAC,QAAAC,CAAA,GAAAC,YAAA,GAAAA,CAAA,M;qCAlBUrB,oBAAoB;EAAA,G;UAApBA,oBAAoB;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjBjCpD,wDAAA,IAAAsD,uCAAA,sBAAwD;;;;QAAzBtD,wDAAA,SAAAA,yDAAA,OAAAqD,GAAA,CAAAzB,GAAA,EAAkB;;;mBDYxBnC,iDAAI,EAAED,oDAAK,EAAEG,uDAAU,EAAlCJ,sDAAS;IAAAiE,MAAA;IAAAC,eAAA;EAAA;;;AA0BvB,MAAMtB,eAAe,GAAG,CACtB,mCAAmC,EACnC,mCAAmC,EACnC,mCAAmC,EACnC,mCAAmC,CACpC;AAED,SAASE,cAAcA,CAACqB,KAAwC;EAC9D,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,EAAE;EACX;EACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE;EACxC,OAAO,GAAGF,KAAK,CAACG,GAAG,GAAGF,SAAS,GAAG,KAAK,GAAGA,SAAS,GAAG,EAAE,EAAE;AAC5D,C;;;;;;;;;;;;;;;;;;;;;AEnDqE;AAEtB;AACW;AAEwB;;AAI5E,MAAO5D,aAAa;EAOxB0B,YAAA;IANiB,KAAAE,GAAG,GAAGjC,qDAAM,CAACI,oFAAmB,CAAC;IACjC,KAAAqE,4BAA4B,GAAGJ,qDAAM,CAAC,KAAK,MAAAK,SAAA;MAAAC,SAAA;IAAA,SAAC;IAC5C,KAAAC,aAAa,GAAGP,qDAAM,CAAqB,IAAI,MAAAK,SAAA;MAAAC,SAAA;IAAA,SAAC;IACxD,KAAAxC,QAAQ,GAAGqC,wEAAY,CAAC,IAAI,CAACI,aAAa,CAAC;IAC3C,KAAA/B,QAAQ,GAAGuB,uDAAQ,CAAC,MAAM,IAAI,CAACK,4BAA4B,EAAE,MAAAC,SAAA;MAAAC,SAAA;IAAA,SAAC;IAGrE,IAAI,CAAC1C,GAAG,CAAC4C,cAAc,EAAE,CAAC5B,SAAS,CAAErC,OAAO,IAAK,IAAI,CAACgE,aAAa,CAACE,GAAG,CAAClE,OAAO,CAAC,CAAC;EACnF;EAEAoC,4BAA4BA,CAACD,OAAgB;IAC3C,IAAI,CAAC0B,4BAA4B,CAACK,GAAG,CAAC,IAAI,CAAC;IAC3C,OAAO,IAAI,CAAC7C,GAAG,CAACe,4BAA4B,CAACD,OAAO,CAAC,CAACV,IAAI,CACxDkC,mDAAG,CAAE3D,OAAO,IAAK,IAAI,CAACgE,aAAa,CAACE,GAAG,CAAClE,OAAO,CAAC,CAAC,EACjD0D,wDAAQ,CAAC,MAAM,IAAI,CAACG,4BAA4B,CAACK,GAAG,CAAC,KAAK,CAAC,CAAC,CAC7D;EACH;EAAC,QAAA5B,CAAA,GAAAC,YAAA,GAAAA,CAAA,M;qCAjBU9C,aAAa;EAAA,G;WAAbA,aAAa;IAAA0E,OAAA,EAAb1E,aAAa,CAAA2E,IAAA;IAAAC,UAAA,EADA;EAAM","sources":["./src/app/feature/profile/ui/profile-page.component.ts","./src/app/feature/profile/ui/profile-page.component.html","./src/app/feature/profile/data-access/profile.facade.ts"],"sourcesContent":["import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { ProfileFacade } from '../data-access/profile.facade';\n\n@Component({\n    selector: 'dr-profile-page',\n    standalone: true,\n    imports: [AsyncPipe, NgIf, NgFor, RouterLink],\n    templateUrl: './profile-page.component.html',\n    styleUrls: ['./profile-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfilePageComponent {\n  private readonly facade = inject(ProfileFacade);\n  private readonly api = inject(DocRosterApiService);\n\n  readonly vm$ = combineLatest([this.facade.profile$, this.api.getDoctors()]).pipe(\n    map(([profile, doctors]) => ({\n      profile,\n      specialists: doctors.slice(0, 4).map((doctor, index) => ({\n        doctor,\n        avatar: PROFILE_AVATARS[index % PROFILE_AVATARS.length],\n        schedule: formatSchedule(doctor.availability?.[0])\n      }))\n    }))\n  );\n  readonly isSaving = this.facade.isSaving;\n\n  onToggleNotifications(enabled: boolean): void {\n    this.facade.updateNotificationPreference(enabled).subscribe();\n  }\n}\n\nconst PROFILE_AVATARS = [\n  'assets/figma/profile/1814_506.png',\n  'assets/figma/profile/1814_521.png',\n  'assets/figma/profile/1814_536.png',\n  'assets/figma/profile/1814_551.png'\n];\n\nfunction formatSchedule(entry?: { day: string; times: string[] }): string {\n  if (!entry) {\n    return '';\n  }\n  const firstTime = entry.times?.[0] ?? '';\n  return `${entry.day}${firstTime ? ' Â· ' + firstTime : ''}`;\n}\n","<section class=\"profile-view\" *ngIf=\"vm$ | async as vm\">\n  <div class=\"profile-view__frame\">\n    <div class=\"profile-view__card\">\n      <img src=\"assets/figma/profile/1814_483.png\" alt=\"Organization logo\" class=\"profile-view__hero\" />\n\n      <div class=\"profile-view__header-actions\">\n        <button type=\"button\" aria-label=\"Edit profile\" class=\"profile-view__icon profile-view__icon--edit\"></button>\n        <span class=\"profile-view__header-divider\" aria-hidden=\"true\"></span>\n        <button type=\"button\" aria-label=\"Logout\" class=\"profile-view__icon profile-view__icon--logout\"></button>\n      </div>\n\n      <button type=\"button\" class=\"profile-view__close\" routerLink=\"/search\" aria-label=\"Back to search\"></button>\n\n      <div class=\"profile-view__summary\">\n        <h1>{{ vm.profile?.name }}</h1>\n        <div class=\"profile-view__contact\">\n          <a *ngIf=\"vm.profile\" [href]=\"'mailto:' + vm.profile.email\">{{ vm.profile.email }}</a>\n          <a *ngIf=\"vm.profile?.phone\" [href]=\"'tel:' + vm.profile?.phone\">{{ vm.profile?.phone }}</a>\n        </div>\n      </div>\n\n      <hr class=\"profile-view__divider\" />\n\n      <section class=\"profile-view__stats\">\n        <h2>Statistics</h2>\n        <div class=\"profile-view__stats-grid\">\n          <div class=\"profile-view__stat\">\n            <span class=\"profile-view__stat-value\">503</span>\n            <span class=\"profile-view__stat-label\">Total active pins</span>\n          </div>\n          <div class=\"profile-view__stat\">\n            <span class=\"profile-view__stat-value\">11</span>\n            <span class=\"profile-view__stat-label\">Added in 30 d.</span>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"profile-view__specialists\">\n        <header>\n          <h2>Your specialists</h2>\n          <button type=\"button\" class=\"profile-view__add\">\n            <span class=\"profile-view__add-icon\"></span>\n            <span>Add</span>\n          </button>\n        </header>\n        <ul>\n          <li *ngFor=\"let specialist of vm.specialists\">\n            <img [src]=\"specialist.avatar\" [alt]=\"specialist.doctor.name\" />\n            <div>\n              <h3>{{ specialist.doctor.name }}</h3>\n              <p>{{ specialist.doctor.specialty }}</p>\n              <p>{{ specialist.schedule }}</p>\n            </div>\n            <div class=\"profile-view__result-actions\">\n              <button type=\"button\" aria-label=\"Edit specialist\" class=\"profile-view__icon profile-view__icon--edit\"></button>\n              <button type=\"button\" aria-label=\"Remove specialist\" class=\"profile-view__icon profile-view__icon--delete\"></button>\n            </div>\n          </li>\n        </ul>\n      </section>\n    </div>\n  </div>\n</section>\n","import { Injectable, computed, inject, signal } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { toObservable } from '@angular/core/rxjs-interop';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { UserProfile } from '../../../shared/data-access/models/user-profile.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileFacade {\n  private readonly api = inject(DocRosterApiService);\n  private readonly savingNotificationPreference = signal(false);\n  private readonly profileSignal = signal<UserProfile | null>(null);\n  readonly profile$ = toObservable(this.profileSignal);\n  readonly isSaving = computed(() => this.savingNotificationPreference());\n\n  constructor() {\n    this.api.getUserProfile().subscribe((profile) => this.profileSignal.set(profile));\n  }\n\n  updateNotificationPreference(enabled: boolean): Observable<UserProfile> {\n    this.savingNotificationPreference.set(true);\n    return this.api.updateNotificationPreference(enabled).pipe(\n      tap((profile) => this.profileSignal.set(profile)),\n      finalize(() => this.savingNotificationPreference.set(false))\n    );\n  }\n}\n"],"names":["AsyncPipe","NgFor","NgIf","inject","RouterLink","combineLatest","map","DocRosterApiService","ProfileFacade","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµproperty","vm_r1","profile","email","ÉµÉµsanitizeUrl","ÉµÉµadvance","ÉµÉµtextInterpolate","phone","ÉµÉµelement","specialist_r2","avatar","doctor","name","specialty","schedule","ÉµÉµtemplate","ProfilePageComponent_section_0_a_13_Template","ProfilePageComponent_section_0_a_14_Template","ProfilePageComponent_section_0_li_39_Template","specialists","ProfilePageComponent","constructor","facade","api","vm$","profile$","getDoctors","pipe","doctors","slice","index","PROFILE_AVATARS","length","formatSchedule","availability","isSaving","onToggleNotifications","enabled","updateNotificationPreference","subscribe","_","_staticBlock","selectors","decls","vars","consts","template","ProfilePageComponent_Template","rf","ctx","ProfilePageComponent_section_0_Template","ÉµÉµpipeBind1","styles","changeDetection","entry","firstTime","times","day","computed","signal","finalize","tap","toObservable","savingNotificationPreference","ngDevMode","debugName","profileSignal","getUserProfile","set","factory","Éµfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}