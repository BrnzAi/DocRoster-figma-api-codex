{"version":3,"file":"422.js","mappings":"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","sources":["./src/app/feature/search/ui/search-page.component.ts","./src/app/feature/search/ui/search-page.component.html","./src/app/feature/search/data-access/search.facade.ts"],"sourcesContent":["import { NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, effect, inject, signal } from '@angular/core';\nimport { toObservable, toSignal } from '@angular/core/rxjs-interop';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { SearchFacade } from '../data-access/search.facade';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\nimport { MapStateService } from '../../../shared/data-access/map-state.service';\n\ntype SortingOption = 'fee' | 'distance' | 'availability';\ntype FeeOption = 'low' | 'medium' | 'high' | null;\ntype GenderOption = 'any' | 'male' | 'female';\ntype LocationOption = 'belleville' | 'sault-ste-marie' | 'thunder-bay' | null;\ntype CareOption = 'hybrid' | 'inperson' | 'virtual' | null;\n\ninterface FilterState {\n  sorting: SortingOption;\n  fee: FeeOption;\n  gender: GenderOption;\n  location: LocationOption;\n  care: CareOption;\n}\n\nconst FEE_ORDER: Record<Exclude<FeeOption, null>, number> = {\n  low: 0,\n  medium: 1,\n  high: 2\n};\n\nconst LOCATION_LOOKUP: Record<Exclude<LocationOption, null>, string> = {\n  belleville: 'Belleville',\n  'sault-ste-marie': 'Sault Ste. Marie',\n  'thunder-bay': 'Thunder Bay'\n};\n\nconst SORTING_OPTIONS: ReadonlyArray<{ id: SortingOption; label: string }> = [\n  { id: 'fee', label: 'Fee' },\n  { id: 'distance', label: 'Distance' },\n  { id: 'availability', label: 'Availability' }\n];\n\nconst FEE_OPTIONS: ReadonlyArray<{ id: Exclude<FeeOption, null>; label: string }> = [\n  { id: 'low', label: 'Low' },\n  { id: 'medium', label: 'Medium' },\n  { id: 'high', label: 'High' }\n];\n\nconst GENDER_OPTIONS: ReadonlyArray<{ id: GenderOption; label: string }> = [\n  { id: 'any', label: 'Any' },\n  { id: 'male', label: 'Male' },\n  { id: 'female', label: 'Female' }\n];\n\nconst LOCATION_OPTIONS: ReadonlyArray<{ id: Exclude<LocationOption, null>; label: string }> = [\n  { id: 'belleville', label: 'Belleville' },\n  { id: 'sault-ste-marie', label: 'Sault Ste. Marie' },\n  { id: 'thunder-bay', label: 'Thunder Bay' }\n];\n\nconst CARE_OPTIONS: ReadonlyArray<{ id: Exclude<CareOption, null>; label: string }> = [\n  { id: 'hybrid', label: 'Hybrid' },\n  { id: 'inperson', label: 'In-person' },\n  { id: 'virtual', label: 'Virtual' }\n];\n\nconst createDefaultFilters = (): FilterState => ({\n  sorting: 'availability',\n  fee: null,\n  gender: 'any',\n  location: null,\n  care: null\n});\n\nconst cloneFilters = (filters: FilterState): FilterState => ({ ...filters });\n\nconst filtersEqual = (a: FilterState, b: FilterState): boolean =>\n  a.sorting === b.sorting &&\n  a.fee === b.fee &&\n  a.gender === b.gender &&\n  a.location === b.location &&\n  a.care === b.care;\n\nconst parseTimeToMinutes = (value: string): number => {\n  const [hours, minutes] = value.split(':').map((part) => Number.parseInt(part, 10));\n  if (Number.isFinite(hours) && Number.isFinite(minutes)) {\n    return hours * 60 + minutes;\n  }\n  return Number.MAX_SAFE_INTEGER;\n};\n\nconst resolveFeeRank = (tier: FeeOption): number => {\n  if (!tier) {\n    return Number.MAX_SAFE_INTEGER;\n  }\n  return FEE_ORDER[tier];\n};\n\n@Component({\n    selector: 'dr-search-page',\n    standalone: true,\n    imports: [NgFor, NgIf, ReactiveFormsModule, RouterLink],\n    templateUrl: './search-page.component.html',\n    styleUrls: ['./search-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchPageComponent {\n  private readonly searchFacade = inject(SearchFacade);\n  private readonly router = inject(Router);\n  protected readonly mapState = inject(MapStateService);\n\n  readonly searchControl = new FormControl('', { nonNullable: true });\n  private readonly searchTerm$ = this.searchControl.valueChanges.pipe(startWith(''));\n\n  private readonly results$ = this.searchFacade.results$;\n  readonly defaultPrompt = 'Find me an Occupational Therapist who travels to Thunder Bay for catastrophic assessments';\n\n  private readonly appliedFilters = signal<FilterState>(createDefaultFilters());\n  private readonly workingFilters = signal<FilterState>(createDefaultFilters());\n  readonly showFilters = signal(false);\n  readonly hasActiveFilters = computed(() => !filtersEqual(this.appliedFilters(), createDefaultFilters()));\n\n  private readonly appliedFilters$ = toObservable(this.appliedFilters);\n\n  private readonly filteredResults$ = combineLatest<[SearchResult[], string, FilterState]>([\n    this.results$,\n    this.searchTerm$,\n    this.appliedFilters$\n  ]).pipe(\n    map(([results, term, filters]) => {\n      const query = (term ?? '').trim().toLowerCase();\n      const normalizedLocation = filters.location ? LOCATION_LOOKUP[filters.location].toLowerCase() : null;\n\n      let filtered = results;\n\n      if (filters.fee) {\n        filtered = filtered.filter((result) => result.doctor.feeTier === filters.fee);\n      }\n\n      if (filters.gender !== 'any') {\n        filtered = filtered.filter((result) => result.doctor.gender === filters.gender);\n      }\n\n      if (normalizedLocation) {\n        filtered = filtered.filter(\n          (result) => result.clinic.address.city.toLowerCase() === normalizedLocation\n        );\n      }\n\n      if (filters.care) {\n        filtered = filtered.filter((result) => result.doctor.careType === filters.care);\n      }\n\n      if (query) {\n        filtered = filtered.filter((result) => {\n          const haystack = [\n            result.doctor.name,\n            result.doctor.specialty,\n            result.clinic.name,\n            result.clinic.address.city,\n            result.clinic.address.state\n          ]\n            .join(' ')\n            .toLowerCase();\n          return haystack.includes(query);\n        });\n      }\n\n      const sorted = [...filtered];\n      switch (filters.sorting) {\n        case 'fee': {\n          sorted.sort(\n            (a, b) => resolveFeeRank(a.doctor.feeTier ?? null) - resolveFeeRank(b.doctor.feeTier ?? null)\n          );\n          break;\n        }\n        case 'distance': {\n          sorted.sort((a, b) => a.distanceInMinutes - b.distanceInMinutes);\n          break;\n        }\n        case 'availability':\n        default: {\n          sorted.sort(\n            (a, b) => parseTimeToMinutes(a.nextAvailable) - parseTimeToMinutes(b.nextAvailable)\n          );\n        }\n      }\n\n      return sorted;\n    })\n  );\n\n  readonly visibleResults = toSignal(this.filteredResults$, { initialValue: [] as SearchResult[] });\n\n  constructor() {\n    effect(() => {\n      this.mapState.setResults(this.visibleResults());\n    });\n  }\n\n  readonly sortingOptions = SORTING_OPTIONS;\n  readonly feeOptions = FEE_OPTIONS;\n  readonly genderOptions = GENDER_OPTIONS;\n  readonly locationOptions = LOCATION_OPTIONS;\n  readonly careOptions = CARE_OPTIONS;\n\n  openFilters(): void {\n    this.workingFilters.set(cloneFilters(this.appliedFilters()));\n    this.showFilters.set(true);\n  }\n\n  closeFilters(): void {\n    this.showFilters.set(false);\n    this.workingFilters.set(cloneFilters(this.appliedFilters()));\n  }\n\n  applyFilters(): void {\n    this.appliedFilters.set(cloneFilters(this.workingFilters()));\n    this.showFilters.set(false);\n  }\n\n  resetFilters(): void {\n    this.workingFilters.set(createDefaultFilters());\n  }\n\n  selectSorting(option: SortingOption): void {\n    this.workingFilters.update((state) => ({ ...state, sorting: option }));\n  }\n\n  toggleFee(option: Exclude<FeeOption, null>): void {\n    this.workingFilters.update((state) => ({\n      ...state,\n      fee: state.fee === option ? null : option\n    }));\n  }\n\n  selectGender(option: GenderOption): void {\n    this.workingFilters.update((state) => ({ ...state, gender: option }));\n  }\n\n  toggleLocation(option: Exclude<LocationOption, null>): void {\n    this.workingFilters.update((state) => ({\n      ...state,\n      location: state.location === option ? null : option\n    }));\n  }\n\n  toggleCare(option: Exclude<CareOption, null>): void {\n    this.workingFilters.update((state) => ({\n      ...state,\n      care: state.care === option ? null : option\n    }));\n  }\n\n  isSortingActive(option: SortingOption): boolean {\n    return this.workingFilters().sorting === option;\n  }\n\n  isFeeActive(option: Exclude<FeeOption, null>): boolean {\n    return this.workingFilters().fee === option;\n  }\n\n  isGenderActive(option: GenderOption): boolean {\n    return this.workingFilters().gender === option;\n  }\n\n  isLocationActive(option: Exclude<LocationOption, null>): boolean {\n    return this.workingFilters().location === option;\n  }\n\n  isCareActive(option: Exclude<CareOption, null>): boolean {\n    return this.workingFilters().care === option;\n  }\n\n  setActiveDoctor(doctorId: string): void {\n    this.mapState.setActiveDoctor(doctorId);\n  }\n\n  openDoctor(doctorId: string): void {\n    this.mapState.setActiveDoctor(doctorId);\n    this.router.navigate(['/specialists', doctorId]);\n  }\n\n  trackByDoctor(_index: number, result: SearchResult): string {\n    return result.doctor.id;\n  }\n}\n","<ng-container *ngIf=\"visibleResults() as results\">\n  <section class=\"search-panel\">\n    <div class=\"search-panel__header\">\n      <label class=\"search-panel__search\">\n        <button\n          type=\"button\"\n          class=\"search-panel__filter-trigger\"\n          (click)=\"openFilters()\"\n          [class.is-active]=\"hasActiveFilters()\"\n          aria-label=\"Filter specialists\"\n        ></button>\n        <input\n          type=\"search\"\n          [formControl]=\"searchControl\"\n          placeholder=\"Find a specialist...\"\n          aria-label=\"Search specialists\"\n        />\n        <span class=\"search-panel__search-icon\" aria-hidden=\"true\"></span>\n      </label>\n      <a class=\"search-panel__profile\" routerLink=\"/profile\">\n        <span>Profile</span>\n      </a>\n    </div>\n\n    <div class=\"search-panel__summary\">\n      <span>Search results for</span>\n      <h1>{{ searchControl.value ? searchControl.value : defaultPrompt }}</h1>\n      <p>{{ results.length }} specialists</p>\n    </div>\n\n    <div class=\"search-panel__results\" [class.search-panel__results--empty]=\"!results.length\">\n      <ng-container *ngIf=\"results.length; else emptyList\">\n        <ul>\n          <li\n            *ngFor=\"let result of results; trackBy: trackByDoctor\"\n            [class.is-active]=\"mapState.activeDoctorId() === result.doctor.id\"\n            (mouseenter)=\"setActiveDoctor(result.doctor.id)\"\n            (focusin)=\"setActiveDoctor(result.doctor.id)\"\n            tabIndex=\"0\"\n          >\n            <button type=\"button\" (click)=\"openDoctor(result.doctor.id)\">\n              <img [src]=\"result.doctor.avatarUrl\" [alt]=\"result.doctor.name\" />\n              <div>\n                <h2>{{ result.doctor.name }}</h2>\n                <p class=\"meta\">{{ result.doctor.specialty }}</p>\n                <p>{{ result.clinic.name }}</p>\n                <p>{{ result.clinic.address.street }}, {{ result.clinic.address.city }}, {{ result.clinic.address.state }}</p>\n              </div>\n              <span aria-hidden=\"true\"></span>\n            </button>\n          </li>\n        </ul>\n      </ng-container>\n      <ng-template #emptyList>\n        <p class=\"search-panel__empty\">No specialists match the current filters.</p>\n      </ng-template>\n    </div>\n  </section>\n\n  <div class=\"search-panel__filters\" *ngIf=\"showFilters()\">\n    <div class=\"search-panel__filters-backdrop\" (click)=\"closeFilters()\"></div>\n    <article\n      class=\"search-panel__filters-card\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label=\"Filter specialists\"\n      (click)=\"$event.stopPropagation()\"\n    >\n      <p class=\"search-panel__filters-label\">filters</p>\n      <header class=\"search-panel__filters-header\">\n        <h2>Filter specialists</h2>\n        <div class=\"search-panel__filters-actions\">\n          <div class=\"search-panel__filters-actions-pill\">\n            <button type=\"button\" class=\"search-panel__filters-action\" (click)=\"applyFilters()\" aria-label=\"Apply filters\"></button>\n            <button type=\"button\" class=\"search-panel__filters-action\" (click)=\"resetFilters()\" aria-label=\"Reset filters\"></button>\n          </div>\n          <button type=\"button\" class=\"search-panel__filters-action\" (click)=\"closeFilters()\" aria-label=\"Close filters\"></button>\n        </div>\n      </header>\n\n      <div class=\"search-panel__filters-body\">\n        <section class=\"search-panel__filters-group\">\n          <h3>Sorting</h3>\n          <div class=\"search-panel__filters-options\">\n            <button\n              type=\"button\"\n              class=\"search-panel__filters-option\"\n              *ngFor=\"let option of sortingOptions\"\n              (click)=\"selectSorting(option.id)\"\n              [class.is-active]=\"isSortingActive(option.id)\"\n            >\n              {{ option.label }}\n            </button>\n          </div>\n        </section>\n\n        <section class=\"search-panel__filters-group\">\n          <h3>Fees</h3>\n          <div class=\"search-panel__filters-options\">\n            <button\n              type=\"button\"\n              class=\"search-panel__filters-option\"\n              *ngFor=\"let option of feeOptions\"\n              (click)=\"toggleFee(option.id)\"\n              [class.is-active]=\"isFeeActive(option.id)\"\n            >\n              {{ option.label }}\n            </button>\n          </div>\n        </section>\n\n        <section class=\"search-panel__filters-group\">\n          <h3>Gender</h3>\n          <div class=\"search-panel__filters-options\">\n            <button\n              type=\"button\"\n              class=\"search-panel__filters-option\"\n              *ngFor=\"let option of genderOptions\"\n              (click)=\"selectGender(option.id)\"\n              [class.is-active]=\"isGenderActive(option.id)\"\n            >\n              {{ option.label }}\n            </button>\n          </div>\n        </section>\n\n        <section class=\"search-panel__filters-group\">\n          <h3>Location</h3>\n          <div class=\"search-panel__filters-options\">\n            <button\n              type=\"button\"\n              class=\"search-panel__filters-option\"\n              *ngFor=\"let option of locationOptions\"\n              (click)=\"toggleLocation(option.id)\"\n              [class.is-active]=\"isLocationActive(option.id)\"\n            >\n              {{ option.label }}\n            </button>\n          </div>\n        </section>\n\n        <section class=\"search-panel__filters-group\">\n          <h3>Type</h3>\n          <div class=\"search-panel__filters-options\">\n            <button\n              type=\"button\"\n              class=\"search-panel__filters-option\"\n              *ngFor=\"let option of careOptions\"\n              (click)=\"toggleCare(option.id)\"\n              [class.is-active]=\"isCareActive(option.id)\"\n            >\n              {{ option.label }}\n            </button>\n          </div>\n        </section>\n      </div>\n    </article>\n  </div>\n</ng-container>\n","import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SearchFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  readonly results$: Observable<SearchResult[]> = this.api.getSearchResults();\n}\n"],"names":["NgFor","NgIf","computed","effect","inject","signal","toObservable","toSignal","FormControl","ReactiveFormsModule","Router","RouterLink","combineLatest","map","startWith","SearchFacade","MapStateService","i0","ɵɵelementStart","ɵɵlistener","SearchPageComponent_ng_container_0_ng_container_18_li_2_Template_li_mouseenter_0_listener","result_r4","ɵɵrestoreView","_r3","$implicit","ctx_r1","ɵɵnextContext","ɵɵresetView","setActiveDoctor","doctor","id","SearchPageComponent_ng_container_0_ng_container_18_li_2_Template_li_focusin_0_listener","SearchPageComponent_ng_container_0_ng_container_18_li_2_Template_button_click_1_listener","openDoctor","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","mapState","activeDoctorId","ɵɵadvance","ɵɵproperty","avatarUrl","ɵɵsanitizeUrl","name","ɵɵtextInterpolate","specialty","clinic","ɵɵtextInterpolate3","address","street","city","state","ɵɵelementContainerStart","ɵɵtemplate","SearchPageComponent_ng_container_0_ng_container_18_li_2_Template","results_r5","trackByDoctor","SearchPageComponent_ng_container_0_div_21_button_18_Template_button_click_0_listener","option_r8","_r7","selectSorting","isSortingActive","ɵɵtextInterpolate1","label","SearchPageComponent_ng_container_0_div_21_button_23_Template_button_click_0_listener","option_r10","_r9","toggleFee","isFeeActive","SearchPageComponent_ng_container_0_div_21_button_28_Template_button_click_0_listener","option_r12","_r11","selectGender","isGenderActive","SearchPageComponent_ng_container_0_div_21_button_33_Template_button_click_0_listener","option_r14","_r13","toggleLocation","isLocationActive","SearchPageComponent_ng_container_0_div_21_button_38_Template_button_click_0_listener","option_r16","_r15","toggleCare","isCareActive","SearchPageComponent_ng_container_0_div_21_Template_div_click_1_listener","_r6","closeFilters","SearchPageComponent_ng_container_0_div_21_Template_article_click_2_listener","$event","stopPropagation","SearchPageComponent_ng_container_0_div_21_Template_button_click_10_listener","applyFilters","SearchPageComponent_ng_container_0_div_21_Template_button_click_11_listener","resetFilters","SearchPageComponent_ng_container_0_div_21_Template_button_click_12_listener","SearchPageComponent_ng_container_0_div_21_button_18_Template","SearchPageComponent_ng_container_0_div_21_button_23_Template","SearchPageComponent_ng_container_0_div_21_button_28_Template","SearchPageComponent_ng_container_0_div_21_button_33_Template","SearchPageComponent_ng_container_0_div_21_button_38_Template","sortingOptions","feeOptions","genderOptions","locationOptions","careOptions","SearchPageComponent_ng_container_0_Template_button_click_4_listener","_r1","openFilters","SearchPageComponent_ng_container_0_ng_container_18_Template","SearchPageComponent_ng_container_0_ng_template_19_Template","ɵɵtemplateRefExtractor","SearchPageComponent_ng_container_0_div_21_Template","hasActiveFilters","searchControl","value","defaultPrompt","length","emptyList_r17","showFilters","FEE_ORDER","low","medium","high","LOCATION_LOOKUP","belleville","SORTING_OPTIONS","FEE_OPTIONS","GENDER_OPTIONS","LOCATION_OPTIONS","CARE_OPTIONS","createDefaultFilters","sorting","fee","gender","location","care","cloneFilters","filters","filtersEqual","a","b","parseTimeToMinutes","hours","minutes","split","part","Number","parseInt","isFinite","MAX_SAFE_INTEGER","resolveFeeRank","tier","SearchPageComponent","constructor","searchFacade","router","nonNullable","searchTerm$","valueChanges","pipe","results$","appliedFilters","ngDevMode","debugName","workingFilters","appliedFilters$","filteredResults$","results","term","query","trim","toLowerCase","normalizedLocation","filtered","filter","result","feeTier","careType","haystack","join","includes","sorted","sort","distanceInMinutes","nextAvailable","visibleResults","initialValue","setResults","set","option","update","doctorId","navigate","_index","_","_staticBlock","selectors","decls","vars","consts","template","SearchPageComponent_Template","rf","ctx","SearchPageComponent_ng_container_0_Template","i1","DefaultValueAccessor","NgControlStatus","FormControlDirective","styles","changeDetection","DocRosterApiService","api","getSearchResults","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}