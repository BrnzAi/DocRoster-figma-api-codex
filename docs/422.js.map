{"version":3,"file":"422.js","mappings":"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","sources":["./src/app/feature/search/data-access/search.facade.ts","./src/app/feature/search/ui/search-page.component.ts","./src/app/feature/search/ui/search-page.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SearchFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  readonly filters$: Observable<FilterGroup[]> = this.api.getFilters();\n  readonly results$: Observable<SearchResult[]> = this.api.getSearchResults();\n}\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { FilterGroupComponent } from '../../../shared/ui/filter-group/filter-group.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { FiltersFacade } from '../../filters/data-access/filters.facade';\nimport { SearchFacade } from '../data-access/search.facade';\n\n@Component({\n  selector: 'dr-search-page',\n  standalone: true,\n  imports: [AsyncPipe, NgFor, NgIf, ReactiveFormsModule, SectionHeaderComponent, FilterGroupComponent, DoctorCardComponent],\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchPageComponent {\n  private readonly filtersFacade = inject(FiltersFacade);\n  private readonly searchFacade = inject(SearchFacade);\n\n  readonly filters$ = this.filtersFacade.filters$;\n  readonly selections = this.filtersFacade.selectionsSignal;\n  readonly filteredResults$ = this.filtersFacade.filteredResults$;\n  readonly activeFilters = this.filtersFacade.activeFilterCount;\n  readonly totalResults$ = this.searchFacade.results$;\n  readonly hasSelections = computed(() => this.activeFilters() > 0);\n  readonly searchControl = new FormControl('', { nonNullable: true });\n\n  private readonly searchTerm$ = this.searchControl.valueChanges.pipe(startWith(''));\n\n  readonly visibleResults$ = combineLatest([this.filteredResults$, this.searchTerm$]).pipe(\n    map(([results, term]) => {\n      const query = term.trim().toLowerCase();\n      if (!query.length) {\n        return results;\n      }\n      return results.filter((result) => {\n        const haystack = [\n          result.doctor.name,\n          result.doctor.specialty,\n          result.clinic.name,\n          result.clinic.address.city,\n          result.clinic.address.state\n        ]\n          .join(' ')\n          .toLowerCase();\n        return haystack.includes(query);\n      });\n    })\n  );\n\n  readonly visibleCount$ = this.visibleResults$.pipe(map((items) => items.length));\n\n  onToggle(group: FilterGroup, value: string): void {\n    this.filtersFacade.toggleOption(group, value);\n  }\n\n  clearGroup(groupId: string): void {\n    this.filtersFacade.clearGroup(groupId);\n  }\n\n  resetAll(): void {\n    this.filtersFacade.resetAll();\n  }\n\n  selectionForGroup(groupId: string): string[] {\n    return this.selections()[groupId] ?? [];\n  }\n\n  clearSearch(): void {\n    this.searchControl.setValue('');\n  }\n}\n","<section class=\"search-hero section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Search DocRoster specialists\"\n      subtitle=\"Blend map intelligence, filters and live availability to find the teams you need.\"\n    >\n      <div actions class=\"search-hero__actions\" *ngIf=\"hasSelections()\">\n        <button class=\"button button--ghost\" type=\"button\" (click)=\"resetAll()\">Reset filters</button>\n      </div>\n    </dr-section-header>\n    <form class=\"search-hero__form\" (ngSubmit)=\"$event.preventDefault()\">\n      <label class=\"search-hero__field\">\n        <span class=\"material-symbols-rounded\" aria-hidden=\"true\">search</span>\n        <input type=\"search\" [formControl]=\"searchControl\" placeholder=\"Search by name, specialty or clinic\" aria-label=\"Search specialists\" />\n        <button\n          type=\"button\"\n          class=\"search-hero__clear\"\n          *ngIf=\"searchControl.value\"\n          (click)=\"clearSearch()\"\n        >\n          Clear\n        </button>\n      </label>\n    </form>\n    <p class=\"search-hero__meta\" *ngIf=\"(visibleCount$ | async) as count\">{{ count }} specialists match your filters.</p>\n  </div>\n</section>\n\n<section class=\"search-layout container\">\n  <aside class=\"search-layout__filters\" *ngIf=\"filters$ | async as groups\">\n    <ng-container *ngFor=\"let group of groups\">\n      <div class=\"search-layout__filter-group\">\n        <dr-filter-group\n          [group]=\"group\"\n          [selected]=\"selectionForGroup(group.id)\"\n          (toggled)=\"onToggle(group, $event)\"\n        ></dr-filter-group>\n        <button\n          type=\"button\"\n          class=\"search-layout__clear\"\n          *ngIf=\"selectionForGroup(group.id).length\"\n          (click)=\"clearGroup(group.id)\"\n        >\n          Clear {{ group.title.toLowerCase() }}\n        </button>\n      </div>\n    </ng-container>\n  </aside>\n  <div class=\"search-layout__results\" *ngIf=\"visibleResults$ | async as results\">\n    <div class=\"search-layout__empty\" *ngIf=\"!results.length\">\n      <h3>No matches yet</h3>\n      <p>Adjust the filters or explore the DocRoster map to discover more pilot specialists.</p>\n    </div>\n    <dr-doctor-card\n      *ngFor=\"let result of results\"\n      [doctor]=\"result.doctor\"\n      [clinic]=\"result.clinic\"\n      [nextAvailable]=\"result.nextAvailable\"\n      [highlightDistance]=\"result.distanceInMinutes\"\n    ></dr-doctor-card>\n  </div>\n</section>\n"],"names":["inject","DocRosterApiService","SearchFacade","constructor","api","filters$","getFilters","results$","getSearchResults","factory","ɵfac","providedIn","AsyncPipe","NgFor","NgIf","computed","FormControl","ReactiveFormsModule","combineLatest","map","startWith","DoctorCardComponent","FilterGroupComponent","SectionHeaderComponent","FiltersFacade","i0","ɵɵelementStart","ɵɵlistener","SearchPageComponent_div_3_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","resetAll","ɵɵtext","ɵɵelementEnd","SearchPageComponent_button_9_Template_button_click_0_listener","_r3","clearSearch","ɵɵadvance","ɵɵtextInterpolate1","count_r4","SearchPageComponent_aside_13_ng_container_1_button_3_Template_button_click_0_listener","_r7","group_r6","$implicit","clearGroup","id","title","toLowerCase","ɵɵelementContainerStart","SearchPageComponent_aside_13_ng_container_1_Template_dr_filter_group_toggled_2_listener","$event","_r5","onToggle","ɵɵtemplate","SearchPageComponent_aside_13_ng_container_1_button_3_Template","ɵɵproperty","selectionForGroup","length","SearchPageComponent_aside_13_ng_container_1_Template","groups_r8","ɵɵelement","result_r9","doctor","clinic","nextAvailable","distanceInMinutes","SearchPageComponent_div_15_div_1_Template","SearchPageComponent_div_15_dr_doctor_card_2_Template","results_r10","SearchPageComponent","filtersFacade","searchFacade","selections","selectionsSignal","filteredResults$","activeFilters","activeFilterCount","totalResults$","hasSelections","searchControl","nonNullable","searchTerm$","valueChanges","pipe","visibleResults$","results","term","query","trim","filter","result","haystack","name","specialty","address","city","state","join","includes","visibleCount$","items","group","value","toggleOption","groupId","setValue","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SearchPageComponent_Template","rf","ctx","SearchPageComponent_div_3_Template","SearchPageComponent_Template_form_ngSubmit_4_listener","preventDefault","SearchPageComponent_button_9_Template","SearchPageComponent_p_10_Template","SearchPageComponent_aside_13_Template","SearchPageComponent_div_15_Template","ɵɵpipeBind1","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormControlDirective","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}