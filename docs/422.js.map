{"version":3,"file":"422.js","mappings":"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","sources":["./src/app/feature/search/data-access/search.facade.ts","./src/app/feature/search/ui/search-page.component.ts","./src/app/feature/search/ui/search-page.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SearchFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  readonly filters$: Observable<FilterGroup[]> = this.api.getFilters();\n  readonly results$: Observable<SearchResult[]> = this.api.getSearchResults();\n}\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\n\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { FilterGroupComponent } from '../../../shared/ui/filter-group/filter-group.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { FiltersFacade } from '../../filters/data-access/filters.facade';\nimport { SearchFacade } from '../data-access/search.facade';\n\n@Component({\n  selector: 'dr-search-page',\n  standalone: true,\n  imports: [AsyncPipe, NgFor, NgIf, SectionHeaderComponent, FilterGroupComponent, DoctorCardComponent],\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchPageComponent {\n  private readonly filtersFacade = inject(FiltersFacade);\n  private readonly searchFacade = inject(SearchFacade);\n\n  readonly filters$ = this.filtersFacade.filters$;\n  readonly selections = this.filtersFacade.selectionsSignal;\n  readonly filteredResults$ = this.filtersFacade.filteredResults$;\n  readonly activeFilters = this.filtersFacade.activeFilterCount;\n  readonly totalResults$ = this.searchFacade.results$;\n  readonly hasSelections = computed(() => this.activeFilters() > 0);\n\n  onToggle(group: FilterGroup, value: string): void {\n    this.filtersFacade.toggleOption(group, value);\n  }\n\n  clearGroup(groupId: string): void {\n    this.filtersFacade.clearGroup(groupId);\n  }\n\n  resetAll(): void {\n    this.filtersFacade.resetAll();\n  }\n\n  selectionForGroup(groupId: string): string[] {\n    return this.selections()[groupId] ?? [];\n  }\n}\n","<section class=\"search-hero section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Search DocRoster specialists\"\n      subtitle=\"Blend map intelligence, filters and live availability to find the teams you need.\"\n    >\n      <div actions class=\"search-hero__actions\" *ngIf=\"hasSelections()\">\n        <button class=\"button button--ghost\" type=\"button\" (click)=\"resetAll()\">Reset filters</button>\n      </div>\n    </dr-section-header>\n    <p class=\"search-hero__meta\" *ngIf=\"(totalResults$ | async) as total\">{{ total.length }} specialists across the pilot network.</p>\n  </div>\n</section>\n\n<section class=\"search-layout container\">\n  <aside class=\"search-layout__filters\" *ngIf=\"filters$ | async as groups\">\n    <ng-container *ngFor=\"let group of groups\">\n      <div class=\"search-layout__filter-group\">\n        <dr-filter-group\n          [group]=\"group\"\n          [selected]=\"selectionForGroup(group.id)\"\n          (toggled)=\"onToggle(group, $event)\"\n        ></dr-filter-group>\n        <button\n          type=\"button\"\n          class=\"search-layout__clear\"\n          *ngIf=\"selectionForGroup(group.id).length\"\n          (click)=\"clearGroup(group.id)\"\n        >\n          Clear {{ group.title.toLowerCase() }}\n        </button>\n      </div>\n    </ng-container>\n  </aside>\n  <div class=\"search-layout__results\" *ngIf=\"filteredResults$ | async as results\">\n    <div class=\"search-layout__empty\" *ngIf=\"!results.length\">\n      <h3>No matches yet</h3>\n      <p>Adjust the filters or explore the DocRoster map to discover more pilot specialists.</p>\n    </div>\n    <dr-doctor-card\n      *ngFor=\"let result of results\"\n      [doctor]=\"result.doctor\"\n      [clinic]=\"result.clinic\"\n      [nextAvailable]=\"result.nextAvailable\"\n      [highlightDistance]=\"result.distanceInMinutes\"\n    ></dr-doctor-card>\n  </div>\n</section>\n"],"names":["inject","DocRosterApiService","SearchFacade","constructor","api","filters$","getFilters","results$","getSearchResults","factory","ɵfac","providedIn","AsyncPipe","NgFor","NgIf","computed","DoctorCardComponent","FilterGroupComponent","SectionHeaderComponent","FiltersFacade","i0","ɵɵelementStart","ɵɵlistener","SearchPageComponent_div_3_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","resetAll","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","total_r3","length","SearchPageComponent_aside_7_ng_container_1_button_3_Template_button_click_0_listener","_r6","group_r5","$implicit","clearGroup","id","title","toLowerCase","ɵɵelementContainerStart","SearchPageComponent_aside_7_ng_container_1_Template_dr_filter_group_toggled_2_listener","$event","_r4","onToggle","ɵɵtemplate","SearchPageComponent_aside_7_ng_container_1_button_3_Template","ɵɵproperty","selectionForGroup","SearchPageComponent_aside_7_ng_container_1_Template","groups_r7","ɵɵelement","result_r8","doctor","clinic","nextAvailable","distanceInMinutes","SearchPageComponent_div_9_div_1_Template","SearchPageComponent_div_9_dr_doctor_card_2_Template","results_r9","SearchPageComponent","filtersFacade","searchFacade","selections","selectionsSignal","filteredResults$","activeFilters","activeFilterCount","totalResults$","hasSelections","group","value","toggleOption","groupId","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SearchPageComponent_Template","rf","ctx","SearchPageComponent_div_3_Template","SearchPageComponent_p_4_Template","SearchPageComponent_aside_7_Template","SearchPageComponent_div_9_Template","ɵɵpipeBind1","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}