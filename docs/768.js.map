{"version":3,"file":"768.js","mappings":"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","sources":["./src/app/feature/auth/ui/recover-page.component.ts","./src/app/feature/auth/ui/recover-page.component.html"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\n\nimport { AuthFacade } from '../data-access/auth.facade';\n\n@Component({\n  selector: 'dr-recover-page',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterLink, NgIf],\n  templateUrl: './recover-page.component.html',\n  styleUrls: ['./recover-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecoverPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthFacade);\n\n  readonly status = signal<'idle' | 'pending' | 'success' | 'error'>('idle');\n  readonly submitted = signal(false);\n  readonly form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.email]]\n  });\n  readonly message = signal<string>('');\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'pending') {\n      this.submitted.set(true);\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.status.set('pending');\n    this.auth.recover(this.form.getRawValue()).subscribe({\n      next: (result) => {\n        this.status.set('success');\n        this.message.set(`Recovery email sent to ${result.email}`);\n      },\n      error: (error: Error) => {\n        this.status.set('error');\n        this.message.set(error.message);\n      }\n    });\n  }\n\n  isInvalid(): boolean {\n    const control = this.form.controls.email;\n    return control.invalid && (control.dirty || control.touched || this.submitted());\n  }\n}\n","<section class=\"auth auth--recover\">\n  <div class=\"auth__frame\">\n    <img src=\"assets/figma/login/background-large.png\" alt=\"\" class=\"auth__frame-bg\" aria-hidden=\"true\" />\n\n    <div class=\"auth__card\">\n      <div class=\"auth__card-map\" aria-hidden=\"true\"></div>\n\n      <button type=\"button\" class=\"auth__close\" aria-label=\"Back to sign in\" routerLink=\"/auth/login\">\n        <img src=\"assets/figma/recover/1850_2321.png\" alt=\"\" />\n      </button>\n\n      <h1 class=\"auth__title\">Recover access</h1>\n      <p class=\"auth__subtitle\">Enter the email associated with your DocRoster account.</p>\n\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"auth__form\" novalidate>\n        <p class=\"auth__form-error\" *ngIf=\"submitted() && form.invalid\">Please enter a valid email.</p>\n\n        <label class=\"auth__field\" [class.auth__field--invalid]=\"isInvalid()\">\n          <input\n            type=\"email\"\n            formControlName=\"email\"\n            placeholder=\"Registered email\"\n            autocomplete=\"email\"\n            [attr.aria-invalid]=\"isInvalid()\"\n          />\n        </label>\n\n        <button class=\"auth__submit\" type=\"submit\" [disabled]=\"status() === 'pending'\">\n          <span>{{ status() === 'pending' ? 'Sending…' : 'Recover password' }}</span>\n        </button>\n\n        <p class=\"auth__form-status auth__form-status--success\" *ngIf=\"status() === 'success'\">{{ message() }}</p>\n        <p class=\"auth__form-status auth__form-status--error\" *ngIf=\"status() === 'error'\">{{ message() }}</p>\n      </form>\n    </div>\n  </div>\n</section>\n"],"names":["NgIf","inject","signal","FormBuilder","ReactiveFormsModule","Validators","RouterLink","AuthFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","RecoverPageComponent","constructor","fb","auth","status","submitted","form","nonNullable","group","email","required","submit","invalid","set","markAllAsTouched","recover","getRawValue","subscribe","next","result","error","isInvalid","control","controls","dirty","touched","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RecoverPageComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RecoverPageComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","RecoverPageComponent_p_12_Template","RecoverPageComponent_p_18_Template","RecoverPageComponent_p_19_Template","ɵɵproperty","ɵɵclassProp","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}