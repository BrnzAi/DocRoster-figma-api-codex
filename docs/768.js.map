{"version":3,"file":"768.js","mappings":"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","sources":["./src/app/feature/auth/ui/recover-page.component.ts","./src/app/feature/auth/ui/recover-page.component.html"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\n\nimport { AuthFacade } from '../data-access/auth.facade';\n\n@Component({\n    selector: 'dr-recover-page',\n    standalone: true,\n    imports: [ReactiveFormsModule, RouterLink, NgIf],\n    templateUrl: './recover-page.component.html',\n    styleUrls: ['./recover-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecoverPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthFacade);\n\n  readonly status = signal<'idle' | 'pending' | 'success' | 'error'>('idle');\n  readonly submitted = signal(false);\n  readonly form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.email]]\n  });\n  readonly message = signal<string>('');\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'pending') {\n      this.submitted.set(true);\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.status.set('pending');\n    this.auth.recover(this.form.getRawValue()).subscribe({\n      next: (result) => {\n        this.status.set('success');\n        this.message.set(`Recovery email sent to ${result.email}`);\n      },\n      error: (error: Error) => {\n        this.status.set('error');\n        this.message.set(error.message);\n      }\n    });\n  }\n\n  isInvalid(): boolean {\n    const control = this.form.controls.email;\n    return control.invalid && (control.dirty || control.touched || this.submitted());\n  }\n}\n","<section class=\"auth auth--recover\">\n  <div class=\"auth__frame\">\n    <img src=\"assets/figma/login/background-large.png\" alt=\"\" class=\"auth__frame-bg\" aria-hidden=\"true\" />\n\n    <div class=\"auth__card\">\n      <div class=\"auth__card-map\" aria-hidden=\"true\"></div>\n\n      <button type=\"button\" class=\"auth__close\" aria-label=\"Back to sign in\" routerLink=\"/auth/login\">\n        <img src=\"assets/figma/recover/1850_2321.png\" alt=\"\" />\n      </button>\n\n      <h1 class=\"auth__title\">Recover access</h1>\n      <p class=\"auth__subtitle\">Enter the email associated with your DocRoster account.</p>\n\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"auth__form\" novalidate>\n        <p class=\"auth__form-error\" *ngIf=\"submitted() && form.invalid\">Please enter a valid email.</p>\n\n        <label class=\"auth__field\" [class.auth__field--invalid]=\"isInvalid()\">\n          <input\n            type=\"email\"\n            formControlName=\"email\"\n            placeholder=\"Registered email\"\n            autocomplete=\"email\"\n            [attr.aria-invalid]=\"isInvalid()\"\n          />\n        </label>\n\n        <button class=\"auth__submit\" type=\"submit\" [disabled]=\"status() === 'pending'\">\n          <span>{{ status() === 'pending' ? 'Sending…' : 'Recover password' }}</span>\n        </button>\n\n        <p class=\"auth__form-status auth__form-status--success\" *ngIf=\"status() === 'success'\">{{ message() }}</p>\n        <p class=\"auth__form-status auth__form-status--error\" *ngIf=\"status() === 'error'\">{{ message() }}</p>\n      </form>\n    </div>\n  </div>\n</section>\n"],"names":["NgIf","inject","signal","FormBuilder","ReactiveFormsModule","Validators","RouterLink","AuthFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","RecoverPageComponent","constructor","fb","auth","status","ngDevMode","debugName","submitted","form","nonNullable","group","email","required","submit","invalid","set","markAllAsTouched","recover","getRawValue","subscribe","next","result","error","isInvalid","control","controls","dirty","touched","_","_staticBlock","selectors","decls","vars","consts","template","RecoverPageComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RecoverPageComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","RecoverPageComponent_p_12_Template","RecoverPageComponent_p_18_Template","RecoverPageComponent_p_19_Template","ɵɵproperty","ɵɵclassProp","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}