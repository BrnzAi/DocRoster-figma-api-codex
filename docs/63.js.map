{"version":3,"file":"63.js","mappings":"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","sources":["./src/app/feature/auth/ui/register-page.component.ts","./src/app/feature/auth/ui/register-page.component.html"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\nimport { AuthFacade } from '../data-access/auth.facade';\n\n@Component({\n  selector: 'dr-register-page',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterLink, NgIf],\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegisterPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthFacade);\n  private readonly router = inject(Router);\n\n  readonly status = signal<'idle' | 'pending' | 'success' | 'error'>('idle');\n  readonly submitted = signal(false);\n  readonly form = this.fb.nonNullable.group({\n    fullName: ['', [Validators.required, Validators.minLength(2)]],\n    email: ['', [Validators.required, Validators.email]],\n    phone: [''],\n    agreeToTerms: [false, [Validators.requiredTrue]]\n  });\n  readonly errorMessage = signal<string | null>(null);\n  readonly showValidationErrors = computed(() => this.submitted() && this.form.invalid);\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'pending') {\n      this.submitted.set(true);\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.status.set('pending');\n    this.errorMessage.set(null);\n    this.auth.register(this.form.getRawValue()).subscribe({\n      next: () => {\n        this.status.set('success');\n        this.router.navigate(['/auth/verify'], { queryParams: { email: this.form.getRawValue().email } });\n      },\n      error: (error: Error) => {\n        this.status.set('error');\n        this.errorMessage.set(error.message);\n      }\n    });\n  }\n\n  isInvalid(controlName: 'fullName' | 'email'): boolean {\n    const control = this.form.controls[controlName];\n    return control.invalid && (control.dirty || control.touched || this.submitted());\n  }\n\n  goToLogin(): void {\n    this.router.navigate(['/auth/login']);\n  }\n}\n","<section class=\"auth auth--register\">\n  <div class=\"auth__frame\">\n    <img src=\"assets/figma/login/background-large.png\" alt=\"\" class=\"auth__frame-bg\" aria-hidden=\"true\" />\n\n    <div class=\"auth__card\">\n      <img src=\"assets/figma/register/1848_1718.png\" alt=\"\" class=\"auth__avatar\" aria-hidden=\"true\" />\n      <button type=\"button\" class=\"auth__avatar-action\" aria-label=\"Upload photo\">\n        <img src=\"assets/figma/register/1848_1719.png\" alt=\"\" />\n      </button>\n\n      <button type=\"button\" class=\"auth__close\" aria-label=\"Back to sign in\" (click)=\"goToLogin()\">\n        <img src=\"assets/figma/register/1850_2318.png\" alt=\"\" />\n      </button>\n\n      <h1 class=\"auth__title\">Register account</h1>\n      <p class=\"auth__subtitle\">Sign up to view and manage specialists</p>\n\n      <button type=\"button\" class=\"auth__provider auth__provider--google\" aria-label=\"Sign up with Google\">\n        <img src=\"assets/figma/login/google.png\" alt=\"\" class=\"auth__provider-icon\" />\n        <span>Sign up</span>\n      </button>\n\n      <button type=\"button\" class=\"auth__provider auth__provider--apple\" aria-label=\"Sign up with Apple\">\n        <img src=\"assets/figma/login/apple.png\" alt=\"\" class=\"auth__provider-icon\" />\n        <span>Sign up</span>\n      </button>\n\n      <div class=\"auth__divider\" aria-hidden=\"true\">\n        <span class=\"auth__divider-line auth__divider-line--left\"></span>\n        <span class=\"auth__divider-label\">OR</span>\n        <span class=\"auth__divider-line auth__divider-line--right\"></span>\n      </div>\n\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"auth__form\" novalidate>\n        <p class=\"auth__form-error\" *ngIf=\"showValidationErrors()\">Please fill in the required details.</p>\n\n        <label class=\"auth__field\" [class.auth__field--invalid]=\"isInvalid('fullName')\">\n          <input\n            type=\"text\"\n            formControlName=\"fullName\"\n            placeholder=\"Person or company name\"\n            autocomplete=\"name\"\n            [attr.aria-invalid]=\"isInvalid('fullName')\"\n          />\n        </label>\n\n        <label class=\"auth__field\" [class.auth__field--invalid]=\"isInvalid('email')\">\n          <input\n            type=\"email\"\n            formControlName=\"email\"\n            placeholder=\"Email used for login\"\n            autocomplete=\"email\"\n            [attr.aria-invalid]=\"isInvalid('email')\"\n          />\n        </label>\n\n        <label class=\"auth__field\">\n          <input type=\"tel\" formControlName=\"phone\" placeholder=\"Phone number (optional)\" autocomplete=\"tel\" />\n        </label>\n\n        <label class=\"auth__terms\">\n          <input type=\"checkbox\" formControlName=\"agreeToTerms\" />\n          <span class=\"auth__terms-box\">\n            <img src=\"assets/figma/register/1848_1714.png\" alt=\"\" />\n          </span>\n          <span class=\"auth__terms-label\">I’ve read and agree to the Terms and Conditions</span>\n        </label>\n\n        <button class=\"auth__submit\" type=\"submit\" [disabled]=\"status() === 'pending'\">\n          <span>{{ status() === 'pending' ? 'Creating account…' : 'Sign up to DocRoster' }}</span>\n        </button>\n\n        <p class=\"auth__form-status auth__form-status--error\" *ngIf=\"status() === 'error'\">{{ errorMessage() }}</p>\n        <p class=\"auth__form-status auth__form-status--success\" *ngIf=\"status() === 'success'\">\n          Account created! Check your inbox for verification.\n        </p>\n      </form>\n    </div>\n  </div>\n</section>\n"],"names":["NgIf","computed","inject","signal","FormBuilder","ReactiveFormsModule","Validators","Router","AuthFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","RegisterPageComponent","constructor","fb","auth","router","status","submitted","form","nonNullable","group","fullName","required","minLength","email","phone","agreeToTerms","requiredTrue","showValidationErrors","invalid","submit","set","markAllAsTouched","register","getRawValue","subscribe","next","navigate","queryParams","error","message","isInvalid","controlName","control","controls","dirty","touched","goToLogin","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RegisterPageComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RegisterPageComponent_Template_button_click_7_listener","RegisterPageComponent_Template_form_ngSubmit_26_listener","ɵɵtemplate","RegisterPageComponent_p_27_Template","RegisterPageComponent_p_43_Template","RegisterPageComponent_p_44_Template","ɵɵproperty","ɵɵclassProp","i1","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}