{"version":3,"file":"566.js","mappings":"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","sources":["./src/app/feature/review/ui/review-page.component.ts","./src/app/feature/review/ui/review-page.component.html","./src/app/feature/review/data-access/review.facade.ts","./src/app/shared/ui/review-card/review-card.component.ts","./src/app/shared/ui/review-card/review-card.component.html"],"sourcesContent":["import { AsyncPipe, DatePipe, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { ReviewCardComponent } from '../../../shared/ui/review-card/review-card.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { ReviewFacade } from '../data-access/review.facade';\n\n@Component({\n    selector: 'dr-review-page',\n    standalone: true,\n    imports: [AsyncPipe, NgIf, DatePipe, SectionHeaderComponent, ReviewCardComponent, DoctorCardComponent],\n    templateUrl: './review-page.component.html',\n    styleUrls: ['./review-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewPageComponent {\n  private readonly route = inject(ActivatedRoute);\n  private readonly facade = inject(ReviewFacade);\n\n  readonly context$ = this.route.paramMap.pipe(\n    map((params) => params.get('id') ?? ''),\n    switchMap((id) => this.facade.getReviewContext(id))\n  );\n}\n","<section class=\"review section\" *ngIf=\"context$ | async as context; else loading\">\n  <div class=\"container\" *ngIf=\"context.review as review; else notFound\">\n    <dr-section-header\n      [title]=\"review.headline\"\n      [subtitle]=\"review.comment\"\n      badge=\"Community review\"\n    ></dr-section-header>\n\n    <div class=\"review__meta\">\n      <span>Rated {{ review.rating }}/5</span>\n      <span>{{ review.author }} · {{ review.role }}</span>\n      <span>{{ review.createdAt | date: 'mediumDate' }}</span>\n    </div>\n\n    <div class=\"review__context\" *ngIf=\"context.doctor\">\n      <h3>Specialist referenced</h3>\n      <dr-doctor-card\n        [doctor]=\"context.doctor\"\n        [clinic]=\"context.clinic\"\n        [showActions]=\"false\"\n      ></dr-doctor-card>\n    </div>\n\n    <div class=\"review__card\">\n      <dr-review-card [review]=\"review\"></dr-review-card>\n    </div>\n  </div>\n</section>\n\n<ng-template #loading>\n  <div class=\"container section\"><p>Loading story…</p></div>\n</ng-template>\n\n<ng-template #notFound>\n  <div class=\"container section\"><p>Story not found. Explore other community stories from the map.</p></div>\n</ng-template>\n","import { Injectable, inject } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Clinic } from '../../../shared/data-access/models/clinic.model';\nimport { Doctor } from '../../../shared/data-access/models/doctor.model';\nimport { Review } from '../../../shared/data-access/models/review.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ReviewFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  getReview(reviewId: string): Observable<Review | undefined> {\n    return this.api.getReviewById(reviewId);\n  }\n\n  getDoctorForReview(reviewId: string): Observable<Doctor | undefined> {\n    return this.getReview(reviewId).pipe(\n      switchMap((review) => (review ? this.api.getDoctorById(review.doctorId) : this.api.getDoctors().pipe(map(() => undefined))))\n    );\n  }\n\n  getClinicForReview(reviewId: string): Observable<Clinic | undefined> {\n    return this.getDoctorForReview(reviewId).pipe(\n      switchMap((doctor) => (doctor ? this.api.getClinicById(doctor.clinicId) : this.api.getClinics().pipe(map(() => undefined))))\n    );\n  }\n\n  getReviewContext(reviewId: string): Observable<{ review?: Review; doctor?: Doctor; clinic?: Clinic }> {\n    return combineLatest([\n      this.getReview(reviewId),\n      this.getDoctorForReview(reviewId),\n      this.getClinicForReview(reviewId)\n    ]).pipe(map(([review, doctor, clinic]) => ({ review, doctor, clinic })));\n  }\n}\n","import { DatePipe, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Review } from '../../data-access/models/review.model';\n\n@Component({\n    selector: 'dr-review-card',\n    standalone: true,\n    imports: [DatePipe, NgFor],\n    templateUrl: './review-card.component.html',\n    styleUrls: ['./review-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewCardComponent {\n  @Input({ required: true }) review!: Review;\n}\n","<article class=\"review-card surface\">\n  <header class=\"review-card__header\">\n    <div>\n      <h3>{{ review.headline }}</h3>\n      <p>Rated {{ review.rating }}/5 by {{ review.author }} · {{ review.role }}</p>\n    </div>\n    <span class=\"review-card__date\">{{ review.createdAt | date: 'mediumDate' }}</span>\n  </header>\n\n  <p class=\"review-card__comment\">{{ review.comment }}</p>\n\n  <footer class=\"review-card__footer\">\n    <span *ngFor=\"let tag of review.tags\" class=\"review-card__tag\">#{{ tag }}</span>\n  </footer>\n</article>\n"],"names":["AsyncPipe","DatePipe","NgIf","inject","ActivatedRoute","map","switchMap","DoctorCardComponent","ReviewCardComponent","SectionHeaderComponent","ReviewFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","context_r1","doctor","clinic","ɵɵtemplate","ReviewPageComponent_section_0_div_1_div_10_Template","review_r2","headline","comment","ɵɵtextInterpolate1","rating","ɵɵtextInterpolate2","author","role","ɵɵtextInterpolate","ɵɵpipeBind2","createdAt","ReviewPageComponent_section_0_div_1_Template","review","notFound_r3","ReviewPageComponent","constructor","route","facade","context$","paramMap","pipe","params","get","id","getReviewContext","_","_staticBlock","selectors","decls","vars","consts","template","ReviewPageComponent_Template","rf","ctx","ReviewPageComponent_section_0_Template","ReviewPageComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ReviewPageComponent_ng_template_4_Template","ɵɵpipeBind1","loading_r4","styles","changeDetection","combineLatest","DocRosterApiService","api","getReview","reviewId","getReviewById","getDoctorForReview","getDoctorById","doctorId","getDoctors","undefined","getClinicForReview","getClinicById","clinicId","getClinics","factory","ɵfac","providedIn","NgFor","tag_r1","inputs","ReviewCardComponent_Template","ReviewCardComponent_span_13_Template","ɵɵtextInterpolate3","tags"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}