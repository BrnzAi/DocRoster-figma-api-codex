{"version":3,"file":"851.js","mappings":"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","sources":["./src/app/feature/auth/ui/verify-page.component.ts","./src/app/feature/auth/ui/verify-page.component.html"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\n\nimport { AuthFacade } from '../data-access/auth.facade';\n\n@Component({\n    selector: 'dr-verify-page',\n    standalone: true,\n    imports: [ReactiveFormsModule, RouterLink, NgIf],\n    templateUrl: './verify-page.component.html',\n    styleUrls: ['./verify-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VerifyPageComponent {\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthFacade);\n  private readonly router = inject(Router);\n  private readonly route = inject(ActivatedRoute);\n\n  readonly email = signal(this.route.snapshot.queryParamMap.get('email') ?? '');\n  readonly status = signal<'idle' | 'pending' | 'success' | 'error'>('idle');\n  readonly message = signal<string>('');\n\n  readonly form = this.fb.nonNullable.group({\n    code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]]\n  });\n\n  submit(): void {\n    if (this.form.invalid || this.status() === 'pending') {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.status.set('pending');\n    this.message.set('');\n    this.auth.verify({ email: this.email(), code: this.form.getRawValue().code }).subscribe({\n      next: (valid) => {\n        if (valid) {\n          this.status.set('success');\n          this.message.set('Verification successful. Redirecting…');\n          this.router.navigate(['/profile']);\n        } else {\n          this.status.set('error');\n          this.message.set('The verification code was not accepted.');\n        }\n      },\n      error: (error: Error) => {\n        this.status.set('error');\n        this.message.set(error.message);\n      }\n    });\n  }\n}\n","<section class=\"auth section\">\n  <div class=\"container auth__container\">\n    <h1>Verify your DocRoster account</h1>\n    <p class=\"auth__lead\">Enter the 6-digit code sent to <strong>{{ email() || 'your email' }}</strong>.</p>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"auth__form\">\n      <label>\n        Verification code\n        <input type=\"text\" formControlName=\"code\" placeholder=\"123456\" maxlength=\"6\" />\n      </label>\n      <button class=\"button\" type=\"submit\" [disabled]=\"status() === 'pending'\">\n        {{ status() === 'pending' ? 'Verifying…' : 'Verify account' }}\n      </button>\n      <p class=\"auth__success\" *ngIf=\"status() === 'success'\">{{ message() }}</p>\n      <p class=\"auth__error\" *ngIf=\"status() === 'error'\">{{ message() }}</p>\n    </form>\n\n    <div class=\"auth__links\">\n      <a routerLink=\"/auth/recover\">Resend code</a>\n      <a routerLink=\"/auth/login\">Back to sign in</a>\n    </div>\n  </div>\n</section>\n"],"names":["NgIf","inject","signal","FormBuilder","ReactiveFormsModule","Validators","ActivatedRoute","Router","RouterLink","AuthFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","VerifyPageComponent","constructor","fb","auth","router","route","email","snapshot","queryParamMap","get","ngDevMode","debugName","status","form","nonNullable","group","code","required","minLength","maxLength","submit","invalid","markAllAsTouched","set","verify","getRawValue","subscribe","next","valid","navigate","error","_","_staticBlock","selectors","decls","vars","consts","template","VerifyPageComponent_Template","rf","ctx","ɵɵlistener","VerifyPageComponent_Template_form_ngSubmit_9_listener","ɵɵelement","ɵɵtemplate","VerifyPageComponent_p_15_Template","VerifyPageComponent_p_16_Template","ɵɵproperty","ɵɵtextInterpolate1","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}