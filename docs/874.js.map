{"version":3,"file":"874.js","mappings":"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","sources":["./src/app/feature/filters/data-access/filters.facade.ts","./src/app/shared/ui/filter-group/filter-group.component.ts","./src/app/shared/ui/filter-group/filter-group.component.html"],"sourcesContent":["import { Injectable, computed, inject, signal } from '@angular/core';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\ntype FilterSelections = Record<string, string[]>;\n\ntype FilterPredicate = (result: SearchResult) => boolean;\n\nconst FILTER_PREDICATES: Record<string, FilterPredicate> = {\n  virtual: (result) => result.doctor.virtualCare,\n  multilingual: (result) => result.doctor.languages.length > 1,\n  evening: (result) => result.doctor.availability.some((slot) => slot.times.some((time) => parseInt(time.split(':')[0], 10) >= 17)),\n  weekend: (result) => result.doctor.availability.some((slot) => ['Saturday', 'Sunday'].includes(slot.day)),\n  transit: () => true,\n  hybrid: () => true,\n  inperson: () => true,\n  hmo: (result) => result.doctor.acceptedPlans.includes('hmo'),\n  ppo: (result) => result.doctor.acceptedPlans.includes('ppo'),\n  direct: (result) => result.doctor.acceptedPlans.includes('direct')\n};\n\n@Injectable({ providedIn: 'root' })\nexport class FiltersFacade {\n  private readonly api = inject(DocRosterApiService);\n  private readonly selections = signal<FilterSelections>({});\n\n  readonly filters$: Observable<FilterGroup[]> = this.api.getFilters();\n  readonly selectionsSignal = computed(() => this.selections());\n  private readonly selections$ = toObservable(this.selectionsSignal);\n\n  readonly activeFilterCount = computed(() =>\n    Object.values(this.selections()).reduce((total, values) => total + values.length, 0)\n  );\n\n  readonly filteredResults$: Observable<SearchResult[]> = combineLatest([\n    this.api.getSearchResults(),\n    this.selections$,\n    this.filters$\n  ]).pipe(\n    map(([results, selections, groups]) => {\n      if (!Object.keys(selections).length) {\n        return results;\n      }\n      return results.filter((result) =>\n        Object.entries(selections).every(([groupId, values]) => {\n          if (!values.length) {\n            return true;\n          }\n          const group = groups.find((g) => g.id === groupId);\n          if (!group) {\n            return true;\n          }\n          return values.every((value) => {\n            const predicate = FILTER_PREDICATES[value];\n            return predicate ? predicate(result) : true;\n          });\n        })\n      );\n    })\n  );\n\n  toggleOption(group: FilterGroup, optionValue: string): void {\n    const current = { ...this.selections() };\n    const currentValues = current[group.id] ?? [];\n\n    if (group.type === 'single') {\n      current[group.id] = currentValues[0] === optionValue ? [] : [optionValue];\n    } else {\n      const nextValues = currentValues.includes(optionValue)\n        ? currentValues.filter((value) => value !== optionValue)\n        : [...currentValues, optionValue];\n      current[group.id] = nextValues;\n    }\n\n    this.selections.set(current);\n  }\n\n  clearGroup(groupId: string): void {\n    if (!this.selections()[groupId]) {\n      return;\n    }\n    const next = { ...this.selections() };\n    delete next[groupId];\n    this.selections.set(next);\n  }\n\n  resetAll(): void {\n    this.selections.set({});\n  }\n}\n","import { NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { FilterGroup } from '../../data-access/models/filter.model';\n\n@Component({\n  selector: 'dr-filter-group',\n  standalone: true,\n  imports: [NgFor, NgClass, NgIf],\n  templateUrl: './filter-group.component.html',\n  styleUrls: ['./filter-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterGroupComponent {\n  @Input({ required: true }) group!: FilterGroup;\n  @Input() selected: string[] = [];\n  @Output() toggled = new EventEmitter<string>();\n\n  onToggle(value: string): void {\n    this.toggled.emit(value);\n  }\n\n  isActive(value: string): boolean {\n    return this.selected.includes(value);\n  }\n}\n","<section class=\"filter-group\">\n  <header>\n    <h3>{{ group.title }}</h3>\n    <p *ngIf=\"group.description\">{{ group.description }}</p>\n  </header>\n  <div class=\"filter-group__options\">\n    <button\n      type=\"button\"\n      *ngFor=\"let option of group.options\"\n      (click)=\"onToggle(option.value)\"\n      [ngClass]=\"{ 'filter-group__option--active': isActive(option.value) }\"\n      class=\"filter-group__option\"\n    >\n      <span *ngIf=\"option.icon\" class=\"material-symbols-rounded\">{{ option.icon }}</span>\n      {{ option.label }}\n    </button>\n  </div>\n</section>\n"],"names":["computed","inject","signal","toObservable","combineLatest","map","DocRosterApiService","FILTER_PREDICATES","virtual","result","doctor","virtualCare","multilingual","languages","length","evening","availability","some","slot","times","time","parseInt","split","weekend","includes","day","transit","hybrid","inperson","hmo","acceptedPlans","ppo","direct","FiltersFacade","constructor","api","selections","filters$","getFilters","selectionsSignal","selections$","activeFilterCount","Object","values","reduce","total","filteredResults$","getSearchResults","pipe","results","groups","keys","filter","entries","every","groupId","group","find","g","id","value","predicate","toggleOption","optionValue","current","currentValues","type","nextValues","set","clearGroup","next","resetAll","factory","ɵfac","providedIn","NgClass","NgFor","NgIf","EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","description","option_r3","icon","ɵɵlistener","FilterGroupComponent_button_6_Template_button_click_0_listener","ɵɵrestoreView","_r2","$implicit","ɵɵnextContext","ɵɵresetView","onToggle","ɵɵtemplate","FilterGroupComponent_button_6_span_1_Template","ɵɵproperty","ɵɵpureFunction1","_c0","isActive","ɵɵtextInterpolate1","label","FilterGroupComponent","selected","toggled","emit","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FilterGroupComponent_Template","rf","ctx","FilterGroupComponent_p_4_Template","FilterGroupComponent_button_6_Template","title","options","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}