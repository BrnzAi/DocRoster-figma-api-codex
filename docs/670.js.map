{"version":3,"file":"670.js","mappings":"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","sources":["./src/app/feature/map/data-access/map.facade.ts","./src/app/feature/map/ui/map-page.component.ts","./src/app/feature/map/ui/map-page.component.html","./src/app/shared/ui/clinic-card/clinic-card.component.ts","./src/app/shared/ui/clinic-card/clinic-card.component.html","./src/app/shared/ui/metric-pill/metric-pill.component.ts","./src/app/shared/ui/metric-pill/metric-pill.component.html"],"sourcesContent":["import { Injectable, computed, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Clinic } from '../../../shared/data-access/models/clinic.model';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\n@Injectable({ providedIn: 'root' })\nexport class MapFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  readonly clinics$: Observable<Clinic[]> = this.api.getClinics();\n  readonly searchResults$: Observable<SearchResult[]> = this.api.getSearchResults();\n  readonly metrics = computed(() => this.api.metrics());\n}\n","import { AsyncPipe, DatePipe, DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\nimport { ClinicCardComponent } from '../../../shared/ui/clinic-card/clinic-card.component';\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { MetricPillComponent } from '../../../shared/ui/metric-pill/metric-pill.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { MapFacade } from '../data-access/map.facade';\n\n@Component({\n  selector: 'dr-map-page',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    NgFor,\n    NgIf,\n    DatePipe,\n    DecimalPipe,\n    RouterLink,\n    SectionHeaderComponent,\n    MetricPillComponent,\n    ClinicCardComponent,\n    DoctorCardComponent\n  ],\n  templateUrl: './map-page.component.html',\n  styleUrls: ['./map-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapPageComponent {\n  constructor(public readonly facade: MapFacade) {}\n}\n","<section class=\"map-hero section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Navigate the DocRoster care map\"\n      subtitle=\"Preview our connected network of clinics, specialists and assessment programs before the public rollout.\"\n      badge=\"Pilot preview\"\n    >\n      <div actions class=\"map-hero__actions\">\n        <a class=\"button\" routerLink=\"/search\">Search specialists</a>\n        <a class=\"button button--ghost\" routerLink=\"/auth/register\">Request access</a>\n      </div>\n    </dr-section-header>\n\n    <div class=\"map-hero__metrics\">\n      <dr-metric-pill\n        value=\"{{ facade.metrics().membersServed | number }}\"\n        label=\"Members served\"\n      ></dr-metric-pill>\n      <dr-metric-pill\n        tone=\"secondary\"\n        value=\"{{ facade.metrics().activeClinics }}\"\n        label=\"Active clinics\"\n      ></dr-metric-pill>\n      <dr-metric-pill\n        tone=\"neutral\"\n        value=\"{{ facade.metrics().availableSpecialists }}\"\n        label=\"Specialists\"\n      ></dr-metric-pill>\n      <dr-metric-pill\n        value=\"{{ facade.metrics().averageSatisfaction | number: '1.1-1' }} â˜…\"\n        label=\"Community rating\"\n      ></dr-metric-pill>\n    </div>\n  </div>\n</section>\n\n<section class=\"map-section section\">\n  <div class=\"container\">\n    <dr-section-header title=\"Featured pilot clinics\" subtitle=\"See how DocRoster coordinates across physical and virtual fronts.\"></dr-section-header>\n    <div class=\"map-section__grid\" *ngIf=\"facade.clinics$ | async as clinics\">\n      <dr-clinic-card *ngFor=\"let clinic of clinics\" [clinic]=\"clinic\"></dr-clinic-card>\n    </div>\n  </div>\n</section>\n\n<section class=\"map-section section map-section--alt\">\n  <div class=\"container\">\n    <dr-section-header title=\"Trending specialists\" subtitle=\"Matching community stories with the right expertise.\"></dr-section-header>\n    <div class=\"map-section__grid map-section__grid--doctors\" *ngIf=\"facade.searchResults$ | async as results\">\n      <dr-doctor-card\n        *ngFor=\"let result of results\"\n        [doctor]=\"result.doctor\"\n        [clinic]=\"result.clinic\"\n        [nextAvailable]=\"result.nextAvailable\"\n        [highlightDistance]=\"result.distanceInMinutes\"\n      ></dr-doctor-card>\n    </div>\n  </div>\n</section>\n","import { DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\nimport { Clinic } from '../../data-access/models/clinic.model';\n\n@Component({\n  selector: 'dr-clinic-card',\n  standalone: true,\n  imports: [NgFor, NgIf, RouterLink, DecimalPipe],\n  templateUrl: './clinic-card.component.html',\n  styleUrls: ['./clinic-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClinicCardComponent {\n  @Input({ required: true }) clinic!: Clinic;\n  @Input() showActions = true;\n}\n","<article class=\"clinic-card surface\">\n  <div class=\"clinic-card__header\">\n    <div>\n      <span *ngIf=\"clinic.isVerified\" class=\"clinic-card__pill\">Verified network</span>\n      <h3>{{ clinic.name }}</h3>\n      <p>{{ clinic.description }}</p>\n    </div>\n    <div class=\"clinic-card__rating\">\n      <span>{{ clinic.rating | number: '1.1-1' }}</span>\n      <small>{{ clinic.reviewCount }} reviews</small>\n    </div>\n  </div>\n\n  <ul class=\"clinic-card__tags\">\n    <li *ngFor=\"let specialty of clinic.specialties\">{{ specialty }}</li>\n  </ul>\n\n  <div class=\"clinic-card__meta\">\n    <div>\n      <strong>{{ clinic.address.city }}, {{ clinic.address.state }}</strong>\n      <span>{{ clinic.openingHours }}</span>\n    </div>\n    <div>\n      <span>{{ clinic.phone }}</span>\n      <a [href]=\"'mailto:' + clinic.email\">{{ clinic.email }}</a>\n    </div>\n  </div>\n\n  <div class=\"clinic-card__actions\" *ngIf=\"showActions\">\n    <a class=\"button\" [routerLink]=\"['/search']\" [queryParams]=\"{ clinic: clinic.id }\">View specialists</a>\n    <a class=\"button button--ghost\" [routerLink]=\"['/organizations', 'org-northstar', 'assessments']\">Org assessments</a>\n  </div>\n</article>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dr-metric-pill',\n  standalone: true,\n  templateUrl: './metric-pill.component.html',\n  styleUrls: ['./metric-pill.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MetricPillComponent {\n  @Input({ required: true }) value!: string;\n  @Input({ required: true }) label!: string;\n  @Input() tone: 'primary' | 'secondary' | 'neutral' = 'primary';\n}\n","<div class=\"metric\" [class.metric--secondary]=\"tone === 'secondary'\" [class.metric--neutral]=\"tone === 'neutral'\">\n  <span class=\"metric__value\">{{ value }}</span>\n  <span class=\"metric__label\">{{ label }}</span>\n</div>\n"],"names":["computed","inject","DocRosterApiService","MapFacade","constructor","api","clinics$","getClinics","searchResults$","getSearchResults","metrics","factory","Éµfac","providedIn","AsyncPipe","DecimalPipe","NgFor","NgIf","RouterLink","ClinicCardComponent","DoctorCardComponent","MetricPillComponent","SectionHeaderComponent","i0","ÉµÉµelement","ÉµÉµproperty","clinic_r1","ÉµÉµelementStart","ÉµÉµtemplate","MapPageComponent_div_18_dr_clinic_card_1_Template","ÉµÉµelementEnd","ÉµÉµadvance","clinics_r2","result_r3","doctor","clinic","nextAvailable","distanceInMinutes","MapPageComponent_div_23_dr_doctor_card_1_Template","results_r4","MapPageComponent","facade","ÉµÉµdirectiveInject","i1","selectors","standalone","features","ÉµÉµStandaloneFeature","decls","vars","consts","template","MapPageComponent_Template","rf","ctx","ÉµÉµtext","MapPageComponent_div_18_Template","MapPageComponent_div_23_Template","ÉµÉµpropertyInterpolate","ÉµÉµpipeBind1","membersServed","activeClinics","availableSpecialists","ÉµÉµpropertyInterpolate1","ÉµÉµpipeBind2","averageSatisfaction","styles","changeDetection","ÉµÉµtextInterpolate","specialty_r1","ÉµÉµpureFunction0","_c0","ÉµÉµpureFunction1","_c1","ctx_r1","id","_c2","showActions","inputs","ClinicCardComponent_Template","ClinicCardComponent_span_3_Template","ClinicCardComponent_li_15_Template","ClinicCardComponent_div_27_Template","isVerified","name","description","rating","ÉµÉµtextInterpolate1","reviewCount","specialties","ÉµÉµtextInterpolate2","address","city","state","openingHours","phone","email","ÉµÉµsanitizeUrl","tone","value","label","MetricPillComponent_Template","ÉµÉµclassProp"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}