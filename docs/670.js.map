{"version":3,"file":"670.js","mappings":"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","sources":["./src/app/shared/ui/metric-pill/metric-pill.component.ts","./src/app/shared/ui/metric-pill/metric-pill.component.html","./src/app/shared/ui/clinic-card/clinic-card.component.ts","./src/app/shared/ui/clinic-card/clinic-card.component.html","./src/app/feature/map/ui/map-page.component.ts","./src/app/feature/map/ui/map-page.component.html","./src/app/feature/map/data-access/map.facade.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dr-metric-pill',\n  standalone: true,\n  templateUrl: './metric-pill.component.html',\n  styleUrls: ['./metric-pill.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MetricPillComponent {\n  @Input({ required: true }) value!: string;\n  @Input({ required: true }) label!: string;\n  @Input() tone: 'primary' | 'secondary' | 'neutral' = 'primary';\n}\n","<div class=\"metric\" [class.metric--secondary]=\"tone === 'secondary'\" [class.metric--neutral]=\"tone === 'neutral'\">\n  <span class=\"metric__value\">{{ value }}</span>\n  <span class=\"metric__label\">{{ label }}</span>\n</div>\n","import { DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\nimport { Clinic } from '../../data-access/models/clinic.model';\n\n@Component({\n    selector: 'dr-clinic-card',\n    standalone: true,\n    imports: [NgFor, NgIf, RouterLink, DecimalPipe],\n    templateUrl: './clinic-card.component.html',\n    styleUrls: ['./clinic-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClinicCardComponent {\n  @Input({ required: true }) clinic!: Clinic;\n  @Input() showActions = true;\n}\n","<article class=\"clinic-card surface\">\n  <div class=\"clinic-card__header\">\n    <div>\n      <span *ngIf=\"clinic.isVerified\" class=\"clinic-card__pill\">Verified network</span>\n      <h3>{{ clinic.name }}</h3>\n      <p>{{ clinic.description }}</p>\n    </div>\n    <div class=\"clinic-card__rating\">\n      <span>{{ clinic.rating | number: '1.1-1' }}</span>\n      <small>{{ clinic.reviewCount }} reviews</small>\n    </div>\n  </div>\n\n  <ul class=\"clinic-card__tags\">\n    <li *ngFor=\"let specialty of clinic.specialties\">{{ specialty }}</li>\n  </ul>\n\n  <div class=\"clinic-card__meta\">\n    <div>\n      <strong>{{ clinic.address.city }}, {{ clinic.address.state }}</strong>\n      <span>{{ clinic.openingHours }}</span>\n    </div>\n    <div>\n      <span>{{ clinic.phone }}</span>\n      <a [href]=\"'mailto:' + clinic.email\">{{ clinic.email }}</a>\n    </div>\n  </div>\n\n  <div class=\"clinic-card__actions\" *ngIf=\"showActions\">\n    <a class=\"button\" [routerLink]=\"['/search']\" [queryParams]=\"{ clinic: clinic.id }\">View specialists</a>\n    <a class=\"button button--ghost\" [routerLink]=\"['/organizations', 'org-northstar', 'assessments']\">Org assessments</a>\n  </div>\n</article>\n","import { AsyncPipe, DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\nimport { ClinicCardComponent } from '../../../shared/ui/clinic-card/clinic-card.component';\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { MetricPillComponent } from '../../../shared/ui/metric-pill/metric-pill.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { MapFacade } from '../data-access/map.facade';\n\n@Component({\n    selector: 'dr-map-page',\n    standalone: true,\n    imports: [\n        AsyncPipe,\n        NgFor,\n        NgIf,\n        DecimalPipe,\n        RouterLink,\n        SectionHeaderComponent,\n        MetricPillComponent,\n        ClinicCardComponent,\n        DoctorCardComponent\n    ],\n    templateUrl: './map-page.component.html',\n    styleUrls: ['./map-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapPageComponent {\n  constructor(public readonly facade: MapFacade) {}\n}\n","<section class=\"map-hero section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Navigate the DocRoster care map\"\n      subtitle=\"Preview our connected network of clinics, specialists and assessment programs before the public rollout.\"\n      badge=\"Pilot preview\"\n    >\n      <div actions class=\"map-hero__actions\">\n        <a class=\"button\" routerLink=\"/search\">Search specialists</a>\n        <a class=\"button button--ghost\" routerLink=\"/auth/register\">Request access</a>\n      </div>\n    </dr-section-header>\n\n    <div class=\"map-hero__metrics\">\n      <dr-metric-pill\n        value=\"{{ facade.metrics().membersServed | number }}\"\n        label=\"Members served\"\n      ></dr-metric-pill>\n      <dr-metric-pill\n        tone=\"secondary\"\n        value=\"{{ facade.metrics().activeClinics }}\"\n        label=\"Active clinics\"\n      ></dr-metric-pill>\n      <dr-metric-pill\n        tone=\"neutral\"\n        value=\"{{ facade.metrics().availableSpecialists }}\"\n        label=\"Specialists\"\n      ></dr-metric-pill>\n      <dr-metric-pill\n        value=\"{{ facade.metrics().averageSatisfaction | number: '1.1-1' }} ★\"\n        label=\"Community rating\"\n      ></dr-metric-pill>\n    </div>\n  </div>\n</section>\n\n<section class=\"map-section section\">\n  <div class=\"container\">\n    <dr-section-header title=\"Featured pilot clinics\" subtitle=\"See how DocRoster coordinates across physical and virtual fronts.\"></dr-section-header>\n    <div class=\"map-section__grid\" *ngIf=\"facade.clinics$ | async as clinics\">\n      <dr-clinic-card *ngFor=\"let clinic of clinics\" [clinic]=\"clinic\"></dr-clinic-card>\n    </div>\n  </div>\n</section>\n\n<section class=\"map-section section map-section--alt\">\n  <div class=\"container\">\n    <dr-section-header title=\"Trending specialists\" subtitle=\"Matching community stories with the right expertise.\"></dr-section-header>\n    <div class=\"map-section__grid map-section__grid--doctors\" *ngIf=\"facade.searchResults$ | async as results\">\n      <dr-doctor-card\n        *ngFor=\"let result of results\"\n        [doctor]=\"result.doctor\"\n        [clinic]=\"result.clinic\"\n        [nextAvailable]=\"result.nextAvailable\"\n        [highlightDistance]=\"result.distanceInMinutes\"\n      ></dr-doctor-card>\n    </div>\n  </div>\n</section>\n","import { Injectable, computed, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Clinic } from '../../../shared/data-access/models/clinic.model';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\n@Injectable({ providedIn: 'root' })\nexport class MapFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  readonly clinics$: Observable<Clinic[]> = this.api.getClinics();\n  readonly searchResults$: Observable<SearchResult[]> = this.api.getSearchResults();\n  readonly metrics = computed(() => this.api.metrics());\n}\n"],"names":["MetricPillComponent","constructor","tone","_","_staticBlock","selectors","inputs","value","label","decls","vars","consts","template","MetricPillComponent_Template","rf","ctx","i0","ɵɵdomElementStart","ɵɵtext","ɵɵdomElementEnd","ɵɵclassProp","ɵɵadvance","ɵɵtextInterpolate","DecimalPipe","NgFor","NgIf","RouterLink","ɵɵelementStart","ɵɵelementEnd","specialty_r1","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c1","ctx_r1","clinic","id","_c2","ClinicCardComponent","showActions","ClinicCardComponent_Template","ɵɵtemplate","ClinicCardComponent_span_3_Template","ClinicCardComponent_li_15_Template","ClinicCardComponent_div_27_Template","isVerified","name","description","ɵɵpipeBind2","rating","ɵɵtextInterpolate1","reviewCount","specialties","ɵɵtextInterpolate2","address","city","state","openingHours","phone","email","ɵɵsanitizeUrl","styles","changeDetection","AsyncPipe","DoctorCardComponent","SectionHeaderComponent","ɵɵelement","clinic_r1","MapPageComponent_div_18_dr_clinic_card_1_Template","clinics_r2","result_r3","doctor","nextAvailable","distanceInMinutes","MapPageComponent_div_23_dr_doctor_card_1_Template","results_r4","MapPageComponent","facade","ɵɵdirectiveInject","i1","MapFacade","MapPageComponent_Template","MapPageComponent_div_18_Template","MapPageComponent_div_23_Template","ɵɵinterpolate","ɵɵpipeBind1","metrics","membersServed","activeClinics","availableSpecialists","ɵɵinterpolate1","averageSatisfaction","clinics$","searchResults$","computed","inject","DocRosterApiService","api","getClinics","getSearchResults","ngDevMode","debugName","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}