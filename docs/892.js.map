{"version":3,"file":"892.js","mappings":"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","sources":["./src/app/feature/filters/ui/filters-page.component.ts","./src/app/feature/filters/ui/filters-page.component.html"],"sourcesContent":["import { AsyncPipe, JsonPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\n\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { FilterGroupComponent } from '../../../shared/ui/filter-group/filter-group.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { TagListComponent } from '../../../shared/ui/tag-list/tag-list.component';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { FiltersFacade } from '../data-access/filters.facade';\n\n@Component({\n  selector: 'dr-filters-page',\n  standalone: true,\n  imports: [AsyncPipe, NgFor, NgIf, JsonPipe, SectionHeaderComponent, FilterGroupComponent, TagListComponent, DoctorCardComponent],\n  templateUrl: './filters-page.component.html',\n  styleUrls: ['./filters-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersPageComponent {\n  private readonly facade = inject(FiltersFacade);\n\n  readonly filters$ = this.facade.filters$;\n  readonly selections = this.facade.selectionsSignal;\n  readonly filteredResults$ = this.facade.filteredResults$;\n  readonly activeFilters = this.facade.activeFilterCount;\n  readonly hasActiveFilters = computed(() => this.activeFilters() > 0);\n  readonly selectedTags = computed(() =>\n    Object.values(this.selections()).flatMap((values) => values ?? [])\n  );\n\n  onToggle(group: FilterGroup, value: string): void {\n    this.facade.toggleOption(group, value);\n  }\n\n  clearGroup(groupId: string): void {\n    this.facade.clearGroup(groupId);\n  }\n\n  resetAll(): void {\n    this.facade.resetAll();\n  }\n\n  selectionForGroup(groupId: string): string[] {\n    return this.selections()[groupId] ?? [];\n  }\n}\n","<section class=\"filters-hero section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Design smart filters\"\n      subtitle=\"Combine access modes, availability and language support to build reusable filter presets for DocRoster.\"\n      badge=\"Configurator\"\n    >\n      <div actions class=\"filters-hero__actions\">\n        <button class=\"button\" type=\"button\" (click)=\"resetAll()\">Clear all</button>\n      </div>\n    </dr-section-header>\n\n    <div class=\"filters-hero__selected\" *ngIf=\"hasActiveFilters()\">\n      <span>Active filters</span>\n      <dr-tag-list [tags]=\"selectedTags()\"></dr-tag-list>\n    </div>\n  </div>\n</section>\n\n<section class=\"filters-layout container\">\n  <div class=\"filters-layout__groups\" *ngIf=\"filters$ | async as groups\">\n    <ng-container *ngFor=\"let group of groups\">\n      <div class=\"filters-layout__group\">\n        <dr-filter-group\n          [group]=\"group\"\n          [selected]=\"selectionForGroup(group.id)\"\n          (toggled)=\"onToggle(group, $event)\"\n        ></dr-filter-group>\n        <button\n          class=\"filters-layout__clear\"\n          type=\"button\"\n          *ngIf=\"selectionForGroup(group.id).length\"\n          (click)=\"clearGroup(group.id)\"\n        >\n          Clear {{ group.title.toLowerCase() }}\n        </button>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"filters-layout__results\" *ngIf=\"filteredResults$ | async as results\">\n    <h3>Preview results</h3>\n    <p>Showing {{ results.length }} matches across the pilot network.</p>\n    <dr-doctor-card\n      *ngFor=\"let result of results\"\n      [doctor]=\"result.doctor\"\n      [clinic]=\"result.clinic\"\n      [nextAvailable]=\"result.nextAvailable\"\n      [highlightDistance]=\"result.distanceInMinutes\"\n    ></dr-doctor-card>\n  </div>\n</section>\n"],"names":["AsyncPipe","NgFor","NgIf","computed","inject","DoctorCardComponent","FilterGroupComponent","SectionHeaderComponent","TagListComponent","FiltersFacade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","selectedTags","ɵɵlistener","FiltersPageComponent_div_8_ng_container_1_button_3_Template_button_click_0_listener","ɵɵrestoreView","_r4","group_r3","ɵɵnextContext","$implicit","ɵɵresetView","clearGroup","id","ɵɵtextInterpolate1","title","toLowerCase","ɵɵelementContainerStart","FiltersPageComponent_div_8_ng_container_1_Template_dr_filter_group_toggled_2_listener","$event","_r2","onToggle","ɵɵtemplate","FiltersPageComponent_div_8_ng_container_1_button_3_Template","selectionForGroup","length","FiltersPageComponent_div_8_ng_container_1_Template","groups_r5","result_r6","doctor","clinic","nextAvailable","distanceInMinutes","FiltersPageComponent_div_10_dr_doctor_card_5_Template","results_r7","FiltersPageComponent","constructor","facade","filters$","selections","selectionsSignal","filteredResults$","activeFilters","activeFilterCount","hasActiveFilters","Object","values","flatMap","group","value","toggleOption","groupId","resetAll","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FiltersPageComponent_Template","rf","ctx","FiltersPageComponent_Template_button_click_4_listener","FiltersPageComponent_div_6_Template","FiltersPageComponent_div_8_Template","FiltersPageComponent_div_10_Template","ɵɵpipeBind1","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}