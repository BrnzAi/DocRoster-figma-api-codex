{"version":3,"file":"892.js","mappings":"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","sources":["./src/app/feature/filters/data-access/filters.facade.ts","./src/app/feature/filters/ui/filters-page.component.ts","./src/app/feature/filters/ui/filters-page.component.html","./src/app/shared/ui/filter-group/filter-group.component.ts","./src/app/shared/ui/filter-group/filter-group.component.html","./src/app/shared/ui/tag-list/tag-list.component.ts","./src/app/shared/ui/tag-list/tag-list.component.html"],"sourcesContent":["import { Injectable, computed, inject, signal } from '@angular/core';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { SearchResult } from '../../../shared/data-access/models/search-result.model';\n\ntype FilterSelections = Record<string, string[]>;\n\ntype FilterPredicate = (result: SearchResult) => boolean;\n\nconst FILTER_PREDICATES: Record<string, FilterPredicate> = {\n  virtual: (result) => result.doctor.virtualCare,\n  multilingual: (result) => result.doctor.languages.length > 1,\n  evening: (result) => result.doctor.availability.some((slot) => slot.times.some((time) => parseInt(time.split(':')[0], 10) >= 17)),\n  weekend: (result) => result.doctor.availability.some((slot) => ['Saturday', 'Sunday'].includes(slot.day)),\n  transit: () => true,\n  hybrid: () => true,\n  inperson: () => true,\n  hmo: (result) => result.doctor.acceptedPlans.includes('hmo'),\n  ppo: (result) => result.doctor.acceptedPlans.includes('ppo'),\n  direct: (result) => result.doctor.acceptedPlans.includes('direct')\n};\n\n@Injectable({ providedIn: 'root' })\nexport class FiltersFacade {\n  private readonly api = inject(DocRosterApiService);\n  private readonly selections = signal<FilterSelections>({});\n\n  readonly filters$: Observable<FilterGroup[]> = this.api.getFilters();\n  readonly selectionsSignal = computed(() => this.selections());\n  private readonly selections$ = toObservable(this.selectionsSignal);\n\n  readonly activeFilterCount = computed(() =>\n    Object.values(this.selections()).reduce((total, values) => total + values.length, 0)\n  );\n\n  readonly filteredResults$: Observable<SearchResult[]> = combineLatest([\n    this.api.getSearchResults(),\n    this.selections$,\n    this.filters$\n  ]).pipe(\n    map(([results, selections, groups]) => {\n      if (!Object.keys(selections).length) {\n        return results;\n      }\n      return results.filter((result) =>\n        Object.entries(selections).every(([groupId, values]) => {\n          if (!values.length) {\n            return true;\n          }\n          const group = groups.find((g) => g.id === groupId);\n          if (!group) {\n            return true;\n          }\n          return values.every((value) => {\n            const predicate = FILTER_PREDICATES[value];\n            return predicate ? predicate(result) : true;\n          });\n        })\n      );\n    })\n  );\n\n  toggleOption(group: FilterGroup, optionValue: string): void {\n    const current = { ...this.selections() };\n    const currentValues = current[group.id] ?? [];\n\n    if (group.type === 'single') {\n      current[group.id] = currentValues[0] === optionValue ? [] : [optionValue];\n    } else {\n      const nextValues = currentValues.includes(optionValue)\n        ? currentValues.filter((value) => value !== optionValue)\n        : [...currentValues, optionValue];\n      current[group.id] = nextValues;\n    }\n\n    this.selections.set(current);\n  }\n\n  clearGroup(groupId: string): void {\n    if (!this.selections()[groupId]) {\n      return;\n    }\n    const next = { ...this.selections() };\n    delete next[groupId];\n    this.selections.set(next);\n  }\n\n  resetAll(): void {\n    this.selections.set({});\n  }\n}\n","import { AsyncPipe, JsonPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\n\nimport { DoctorCardComponent } from '../../../shared/ui/doctor-card/doctor-card.component';\nimport { FilterGroupComponent } from '../../../shared/ui/filter-group/filter-group.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { TagListComponent } from '../../../shared/ui/tag-list/tag-list.component';\nimport { FilterGroup } from '../../../shared/data-access/models/filter.model';\nimport { FiltersFacade } from '../data-access/filters.facade';\n\n@Component({\n  selector: 'dr-filters-page',\n  standalone: true,\n  imports: [AsyncPipe, NgFor, NgIf, JsonPipe, SectionHeaderComponent, FilterGroupComponent, TagListComponent, DoctorCardComponent],\n  templateUrl: './filters-page.component.html',\n  styleUrls: ['./filters-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersPageComponent {\n  private readonly facade = inject(FiltersFacade);\n\n  readonly filters$ = this.facade.filters$;\n  readonly selections = this.facade.selectionsSignal;\n  readonly filteredResults$ = this.facade.filteredResults$;\n  readonly activeFilters = this.facade.activeFilterCount;\n  readonly hasActiveFilters = computed(() => this.activeFilters() > 0);\n  readonly selectedTags = computed(() =>\n    Object.values(this.selections()).flatMap((values) => values ?? [])\n  );\n\n  onToggle(group: FilterGroup, value: string): void {\n    this.facade.toggleOption(group, value);\n  }\n\n  clearGroup(groupId: string): void {\n    this.facade.clearGroup(groupId);\n  }\n\n  resetAll(): void {\n    this.facade.resetAll();\n  }\n\n  selectionForGroup(groupId: string): string[] {\n    return this.selections()[groupId] ?? [];\n  }\n}\n","<section class=\"filters-hero section\">\n  <div class=\"container\">\n    <dr-section-header\n      title=\"Design smart filters\"\n      subtitle=\"Combine access modes, availability and language support to build reusable filter presets for DocRoster.\"\n      badge=\"Configurator\"\n    >\n      <div actions class=\"filters-hero__actions\">\n        <button class=\"button\" type=\"button\" (click)=\"resetAll()\">Clear all</button>\n      </div>\n    </dr-section-header>\n\n    <div class=\"filters-hero__selected\" *ngIf=\"hasActiveFilters()\">\n      <span>Active filters</span>\n      <dr-tag-list [tags]=\"selectedTags()\"></dr-tag-list>\n    </div>\n  </div>\n</section>\n\n<section class=\"filters-layout container\">\n  <div class=\"filters-layout__groups\" *ngIf=\"filters$ | async as groups\">\n    <ng-container *ngFor=\"let group of groups\">\n      <div class=\"filters-layout__group\">\n        <dr-filter-group\n          [group]=\"group\"\n          [selected]=\"selectionForGroup(group.id)\"\n          (toggled)=\"onToggle(group, $event)\"\n        ></dr-filter-group>\n        <button\n          class=\"filters-layout__clear\"\n          type=\"button\"\n          *ngIf=\"selectionForGroup(group.id).length\"\n          (click)=\"clearGroup(group.id)\"\n        >\n          Clear {{ group.title.toLowerCase() }}\n        </button>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"filters-layout__results\" *ngIf=\"filteredResults$ | async as results\">\n    <h3>Preview results</h3>\n    <p>Showing {{ results.length }} matches across the pilot network.</p>\n    <dr-doctor-card\n      *ngFor=\"let result of results\"\n      [doctor]=\"result.doctor\"\n      [clinic]=\"result.clinic\"\n      [nextAvailable]=\"result.nextAvailable\"\n      [highlightDistance]=\"result.distanceInMinutes\"\n    ></dr-doctor-card>\n  </div>\n</section>\n","import { NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { FilterGroup } from '../../data-access/models/filter.model';\n\n@Component({\n  selector: 'dr-filter-group',\n  standalone: true,\n  imports: [NgFor, NgClass, NgIf],\n  templateUrl: './filter-group.component.html',\n  styleUrls: ['./filter-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterGroupComponent {\n  @Input({ required: true }) group!: FilterGroup;\n  @Input() selected: string[] = [];\n  @Output() toggled = new EventEmitter<string>();\n\n  onToggle(value: string): void {\n    this.toggled.emit(value);\n  }\n\n  isActive(value: string): boolean {\n    return this.selected.includes(value);\n  }\n}\n","<section class=\"filter-group\">\n  <header>\n    <h3>{{ group.title }}</h3>\n    <p *ngIf=\"group.description\">{{ group.description }}</p>\n  </header>\n  <div class=\"filter-group__options\">\n    <button\n      type=\"button\"\n      *ngFor=\"let option of group.options\"\n      (click)=\"onToggle(option.value)\"\n      [ngClass]=\"{ 'filter-group__option--active': isActive(option.value) }\"\n      class=\"filter-group__option\"\n    >\n      <span *ngIf=\"option.icon\" class=\"material-symbols-rounded\">{{ option.icon }}</span>\n      {{ option.label }}\n    </button>\n  </div>\n</section>\n","import { NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dr-tag-list',\n  standalone: true,\n  imports: [NgFor],\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagListComponent {\n  @Input() tags: string[] = [];\n}\n","<ul class=\"tag-list\">\n  <li *ngFor=\"let tag of tags\">{{ tag }}</li>\n</ul>\n"],"names":["computed","inject","signal","toObservable","combineLatest","map","DocRosterApiService","FILTER_PREDICATES","virtual","result","doctor","virtualCare","multilingual","languages","length","evening","availability","some","slot","times","time","parseInt","split","weekend","includes","day","transit","hybrid","inperson","hmo","acceptedPlans","ppo","direct","FiltersFacade","constructor","api","selections","filters$","getFilters","selectionsSignal","selections$","activeFilterCount","Object","values","reduce","total","filteredResults$","getSearchResults","pipe","results","groups","keys","filter","entries","every","groupId","group","find","g","id","value","predicate","toggleOption","optionValue","current","currentValues","type","nextValues","set","clearGroup","next","resetAll","factory","ɵfac","providedIn","AsyncPipe","NgFor","NgIf","DoctorCardComponent","FilterGroupComponent","SectionHeaderComponent","TagListComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","selectedTags","ɵɵlistener","FiltersPageComponent_div_8_ng_container_1_button_3_Template_button_click_0_listener","ɵɵrestoreView","_r4","group_r3","ɵɵnextContext","$implicit","ɵɵresetView","ɵɵtextInterpolate1","title","toLowerCase","ɵɵelementContainerStart","FiltersPageComponent_div_8_ng_container_1_Template_dr_filter_group_toggled_2_listener","$event","_r2","onToggle","ɵɵtemplate","FiltersPageComponent_div_8_ng_container_1_button_3_Template","selectionForGroup","FiltersPageComponent_div_8_ng_container_1_Template","groups_r5","result_r6","clinic","nextAvailable","distanceInMinutes","FiltersPageComponent_div_10_dr_doctor_card_5_Template","results_r7","FiltersPageComponent","facade","activeFilters","hasActiveFilters","flatMap","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FiltersPageComponent_Template","rf","ctx","FiltersPageComponent_Template_button_click_4_listener","FiltersPageComponent_div_6_Template","FiltersPageComponent_div_8_Template","FiltersPageComponent_div_10_Template","ɵɵpipeBind1","styles","changeDetection","NgClass","EventEmitter","ɵɵtextInterpolate","description","option_r3","icon","FilterGroupComponent_button_6_Template_button_click_0_listener","FilterGroupComponent_button_6_span_1_Template","ɵɵpureFunction1","_c0","isActive","label","selected","toggled","emit","inputs","outputs","FilterGroupComponent_Template","FilterGroupComponent_p_4_Template","FilterGroupComponent_button_6_Template","options","tag_r1","tags","TagListComponent_Template","TagListComponent_li_1_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}