{"version":3,"file":"609.js","mappings":";;;;;;;;;;;;;;;;;AAAmD;AACF;AACZ;AAE6C;;AAI5E,MAAOI,mBAAmB;EADhCC,YAAA;IAEmB,KAAAC,GAAG,GAAGN,qDAAM,CAACG,oFAAmB,CAAC;;EAElDI,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACF,GAAG,CAACG,gBAAgB,EAAE,CAACC,IAAI,CAACR,mDAAG,CAAES,aAAa,IAAKA,aAAa,CAACC,IAAI,CAAEC,YAAY,IAAKA,YAAY,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC;EAC/H;EAEAM,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACF,GAAG,CAACS,4BAA4B,CAACP,EAAE,CAAC;EAClD;EAEAQ,sBAAsBA,CAACR,EAAU;IAC/B,OAAOP,mDAAa,CAAC,CAAC,IAAI,CAACM,eAAe,CAACC,EAAE,CAAC,EAAE,IAAI,CAACM,cAAc,CAACN,EAAE,CAAC,CAAC,CAAC,CAACE,IAAI,CAC5ER,mDAAG,CAAC,CAAC,CAACW,YAAY,EAAEI,WAAW,CAAC,MAAM;MAAEJ,YAAY;MAAEI;IAAW,CAAE,CAAC,CAAC,CACtE;EACH;;;uBAfWb,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAc,OAAA,EAAnBd,mBAAmB,CAAAe,IAAA;MAAAC,UAAA,EADN;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;ACPyB;AACkB;AAC1B;AACD;AAEuD;AACH;AAC1B;;;;ICOpEQ,uDAAA,6BAAkH;;;;IAA/CA,wDAAA,eAAAG,aAAA,CAAyB;;;;;IAbhGH,4DAAA,aAAmF;IACjFA,uDAAA,2BAIqB;IAGnBA,4DADF,aAA+B,WACvB;IAAAA,oDAAA,GAA2B;IAAAA,0DAAA,EAAO;IACxCA,4DAAA,WAAM;IAAAA,oDAAA,GAAqC;IAC7CA,0DAD6C,EAAO,EAC9C;IAENA,4DAAA,aAA+B;IAC7BA,wDAAA,IAAAQ,kFAAA,gCAA6F;IAEjGR,0DADE,EAAM,EACF;;;;;IAbFA,uDAAA,EAA2B;IAC3BA,wDADA,UAAAU,eAAA,CAAAC,IAAA,CAA2B,aAAAD,eAAA,CAAAE,UAAA,CAAAC,IAAA,aACqB;IAK1Cb,uDAAA,GAA2B;IAA3BA,+DAAA,CAAAU,eAAA,CAAAK,QAAA,CAA2B;IAC3Bf,uDAAA,GAAqC;IAArCA,+DAAA,CAAAU,eAAA,CAAAM,kBAAA,CAAqC;IAIAhB,uDAAA,GAAsB;IAAtBA,wDAAA,YAAAiB,UAAA,CAAA5B,WAAA,CAAsB;;;;;IAdvEW,4DAAA,iBAAuF;IACrFA,wDAAA,IAAAkB,6DAAA,iBAAmF;IAgBrFlB,0DAAA,EAAU;;;;;;IAhBgBA,uDAAA,EAA2B;IAAiBA,wDAA5C,SAAAiB,UAAA,CAAAhC,YAAA,CAA2B,aAAAkC,WAAA,CAA8B;;;;;IAmBlDnB,4DAA/B,cAA+B,QAAG;IAAAA,oDAAA,iCAAqB;IAAIA,0DAAJ,EAAI,EAAM;;;;;IAIlCA,4DAA/B,cAA+B,QAAG;IAAAA,oDAAA,+DAAwD;IAAIA,0DAAJ,EAAI,EAAM;;;ADPhG,MAAOoB,oCAAoC;EARjD3C,YAAA;IASmB,KAAA4C,KAAK,GAAGjD,qDAAM,CAACwB,2DAAc,CAAC;IAC9B,KAAA0B,MAAM,GAAGlD,qDAAM,CAACI,kFAAmB,CAAC;IAE5C,KAAA+C,QAAQ,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC1C,IAAI,CAC1CR,mDAAG,CAAEmD,MAAM,IAAKA,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EACvC7B,yDAAS,CAAEjB,EAAE,IAAK,IAAI,CAAC0C,MAAM,CAAClC,sBAAsB,CAACR,EAAE,CAAC,CAAC,CAC1D;;;;uBAPUwC,oCAAoC;IAAA;EAAA;;;YAApCA,oCAAoC;MAAAO,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAA7B,iEAAA;MAAA+B,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8CAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCjBjDpC,wDAAA,IAAAsC,uDAAA,qBAAuF;;UAuBvFtC,wDAJA,IAAAuC,2DAAA,gCAAAvC,oEAAA,CAAsB,IAAAyC,2DAAA,gCAAAzC,oEAAA,CAIC;;;;UAvBkDA,wDAAnC,SAAAA,yDAAA,OAAAqC,GAAA,CAAAd,QAAA,EAAuB,aAAAoB,UAAA,CAAwB;;;qBDYzElD,sDAAS,EAAEE,iDAAI,EAAED,kDAAK,EAAEK,sGAAsB,EAAED,yGAAuB;MAAA8C,MAAA;MAAAC,eAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;AEZ3B;;;;ICmBpD7C,4DAAA,SAA8C;IAAAA,oDAAA,GAAY;IAAAA,0DAAA,EAAK;;;;IAAjBA,uDAAA,EAAY;IAAZA,+DAAA,CAAA+C,SAAA,CAAY;;;ADNxD,MAAOjD,uBAAuB;;;uBAAvBA,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAA6B,SAAA;MAAAqB,MAAA;QAAAC,UAAA;MAAA;MAAArB,UAAA;MAAAC,QAAA,GAAA7B,iEAAA;MAAA+B,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAgB,iCAAAd,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV9BpC,4DAHN,iBAAyC,gBACC,UACjC,SACC;UAAAA,oDAAA,GAAsB;UAAAA,0DAAA,EAAK;UAC/BA,4DAAA,QAAG;UAAAA,oDAAA,GAAwB;UAC7BA,0DAD6B,EAAI,EAC3B;UAEJA,4DADF,aAAuC,WAC/B;UAAAA,oDAAA,GAA0B;UAAAA,0DAAA,EAAO;UACvCA,4DAAA,aAAO;UAAAA,oDAAA,gBAAQ;UAEnBA,0DAFmB,EAAQ,EACnB,EACC;UAGPA,4DADF,cAAmC,YAC3B;UAAAA,oDAAA,IAAyB;UAAAA,0DAAA,EAAO;UACtCA,4DAAA,YAAM;UAAAA,oDAAA,IAAoC;UAAAA,0DAAA,EAAO;UACjDA,4DAAA,YAAM;UAAAA,oDAAA,IAAuD;;UAC/DA,0DAD+D,EAAO,EAChE;UAENA,4DAAA,aAAqC;UACnCA,wDAAA,KAAAmD,sCAAA,gBAA8C;UAElDnD,0DADE,EAAK,EACG;;;UAlBAA,uDAAA,GAAsB;UAAtBA,+DAAA,CAAAqC,GAAA,CAAAY,UAAA,CAAAG,KAAA,CAAsB;UACvBpD,uDAAA,GAAwB;UAAxBA,+DAAA,CAAAqC,GAAA,CAAAY,UAAA,CAAAI,OAAA,CAAwB;UAGrBrD,uDAAA,GAA0B;UAA1BA,gEAAA,KAAAqC,GAAA,CAAAY,UAAA,CAAAM,QAAA,MAA0B;UAM5BvD,uDAAA,GAAyB;UAAzBA,+DAAA,CAAAqC,GAAA,CAAAY,UAAA,CAAAO,QAAA,CAAyB;UACzBxD,uDAAA,GAAoC;UAApCA,gEAAA,qBAAAqC,GAAA,CAAAY,UAAA,CAAAQ,QAAA,KAAoC;UACpCzD,uDAAA,GAAuD;UAAvDA,gEAAA,aAAAA,yDAAA,QAAAqC,GAAA,CAAAY,UAAA,CAAAU,SAAA,oBAAuD;UAItC3D,uDAAA,GAAqB;UAArBA,wDAAA,YAAAqC,GAAA,CAAAY,UAAA,CAAAW,OAAA,CAAqB;;;qBDX9BlE,kDAAK,EAAEoD,qDAAQ;MAAAF,MAAA;MAAAC,eAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;AERM;;;;;;ICEnC7C,4DAAA,cAAkD;IAAAA,oDAAA,GAAW;IAAAA,0DAAA,EAAO;;;;IAAlBA,uDAAA,EAAW;IAAXA,+DAAA,CAAA6D,MAAA,CAAAC,KAAA,CAAW;;;;;IAE7D9D,4DAAA,WAAqD;IAAAA,oDAAA,GAAc;IAAAA,0DAAA,EAAI;;;;IAAlBA,uDAAA,EAAc;IAAdA,+DAAA,CAAA6D,MAAA,CAAAE,QAAA,CAAc;;;ADMjE,MAAOhE,sBAAsB;;;uBAAtBA,sBAAsB;IAAA;EAAA;;;YAAtBA,sBAAsB;MAAA4B,SAAA;MAAAqB,MAAA;QAAAI,KAAA;QAAAW,QAAA;QAAAD,KAAA;MAAA;MAAAlC,UAAA;MAAAC,QAAA,GAAA7B,iEAAA;MAAAgE,kBAAA,EAAAC,GAAA;MAAAlC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAgC,gCAAA9B,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCTjCpC,4DADF,aAA4B,aACU;UAClCA,wDAAA,IAAAmE,sCAAA,kBAAkD;UAClDnE,4DAAA,YAAkC;UAAAA,oDAAA,GAAW;UAAAA,0DAAA,EAAK;UAClDA,wDAAA,IAAAoE,mCAAA,eAAqD;UACvDpE,0DAAA,EAAM;UACNA,4DAAA,aAAqC;UACnCA,0DAAA,GAA4C;UAEhDA,0DADE,EAAM,EACF;;;UAPKA,uDAAA,GAAW;UAAXA,wDAAA,SAAAqC,GAAA,CAAAyB,KAAA,CAAW;UACgB9D,uDAAA,GAAW;UAAXA,+DAAA,CAAAqC,GAAA,CAAAe,KAAA,CAAW;UACzCpD,uDAAA,EAAc;UAAdA,wDAAA,SAAAqC,GAAA,CAAA0B,QAAA,CAAc;;;qBDEVpE,iDAAI;MAAAiD,MAAA;IAAA;EAAA","sources":["./src/app/feature/organizations/data-access/organizations.facade.ts","./src/app/feature/organizations/ui/organization-assessments-page.component.ts","./src/app/feature/organizations/ui/organization-assessments-page.component.html","./src/app/shared/ui/assessment-card/assessment-card.component.ts","./src/app/shared/ui/assessment-card/assessment-card.component.html","./src/app/shared/ui/section-header/section-header.component.ts","./src/app/shared/ui/section-header/section-header.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Assessment, Organization } from '../../../shared/data-access/models/assessment.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OrganizationsFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  getOrganization(id: string): Observable<Organization | undefined> {\n    return this.api.getOrganizations().pipe(map((organizations) => organizations.find((organization) => organization.id === id)));\n  }\n\n  getAssessments(id: string): Observable<Assessment[]> {\n    return this.api.getAssessmentsByOrganization(id);\n  }\n\n  getOrganizationContext(id: string): Observable<{ organization?: Organization; assessments: Assessment[] }> {\n    return combineLatest([this.getOrganization(id), this.getAssessments(id)]).pipe(\n      map(([organization, assessments]) => ({ organization, assessments }))\n    );\n  }\n}\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { AssessmentCardComponent } from '../../../shared/ui/assessment-card/assessment-card.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { OrganizationsFacade } from '../data-access/organizations.facade';\n\n@Component({\n  selector: 'dr-organization-assessments-page',\n  standalone: true,\n  imports: [AsyncPipe, NgIf, NgFor, SectionHeaderComponent, AssessmentCardComponent],\n  templateUrl: './organization-assessments-page.component.html',\n  styleUrls: ['./organization-assessments-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrganizationAssessmentsPageComponent {\n  private readonly route = inject(ActivatedRoute);\n  private readonly facade = inject(OrganizationsFacade);\n\n  readonly context$ = this.route.paramMap.pipe(\n    map((params) => params.get('id') ?? ''),\n    switchMap((id) => this.facade.getOrganizationContext(id))\n  );\n}\n","<section class=\"assessments section\" *ngIf=\"context$ | async as context; else loading\">\n  <div class=\"container\" *ngIf=\"context.organization as organization; else notFound\">\n    <dr-section-header\n      [title]=\"organization.name\"\n      [subtitle]=\"organization.focusAreas.join(' · ')\"\n      badge=\"Organization assessments\"\n    ></dr-section-header>\n\n    <div class=\"assessments__meta\">\n      <span>{{ organization.location }}</span>\n      <span>{{ organization.accreditationLevel }}</span>\n    </div>\n\n    <div class=\"assessments__grid\">\n      <dr-assessment-card *ngFor=\"let assessment of context.assessments\" [assessment]=\"assessment\"></dr-assessment-card>\n    </div>\n  </div>\n</section>\n\n<ng-template #loading>\n  <div class=\"container section\"><p>Loading organization…</p></div>\n</ng-template>\n\n<ng-template #notFound>\n  <div class=\"container section\"><p>Organization not found. Check the DocRoster network map.</p></div>\n</ng-template>\n","import { DatePipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Assessment } from '../../data-access/models/assessment.model';\n\n@Component({\n  selector: 'dr-assessment-card',\n  standalone: true,\n  imports: [NgIf, NgFor, DatePipe],\n  templateUrl: './assessment-card.component.html',\n  styleUrls: ['./assessment-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AssessmentCardComponent {\n  @Input({ required: true }) assessment!: Assessment;\n}\n","<article class=\"assessment-card surface\">\n  <header class=\"assessment-card__header\">\n    <div>\n      <h3>{{ assessment.title }}</h3>\n      <p>{{ assessment.summary }}</p>\n    </div>\n    <div class=\"assessment-card__progress\">\n      <span>{{ assessment.progress }}%</span>\n      <small>Progress</small>\n    </div>\n  </header>\n\n  <div class=\"assessment-card__meta\">\n    <span>{{ assessment.category }}</span>\n    <span>Reviewer · {{ assessment.reviewer }}</span>\n    <span>Updated {{ assessment.updatedAt | date: 'mediumDate' }}</span>\n  </div>\n\n  <ul class=\"assessment-card__actions\">\n    <li *ngFor=\"let action of assessment.actions\">{{ action }}</li>\n  </ul>\n</article>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dr-section-header',\n  standalone: true,\n  imports: [NgIf],\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent {\n  @Input({ required: true }) title!: string;\n  @Input() subtitle?: string;\n  @Input() badge?: string;\n}\n","<div class=\"section-header\">\n  <div class=\"section-header__titles\">\n    <span *ngIf=\"badge\" class=\"section-header__badge\">{{ badge }}</span>\n    <h2 class=\"section-header__title\">{{ title }}</h2>\n    <p *ngIf=\"subtitle\" class=\"section-header__subtitle\">{{ subtitle }}</p>\n  </div>\n  <div class=\"section-header__actions\">\n    <ng-content select=\"[actions]\"></ng-content>\n  </div>\n</div>\n"],"names":["inject","combineLatest","map","DocRosterApiService","OrganizationsFacade","constructor","api","getOrganization","id","getOrganizations","pipe","organizations","find","organization","getAssessments","getAssessmentsByOrganization","getOrganizationContext","assessments","factory","ɵfac","providedIn","AsyncPipe","NgFor","NgIf","ActivatedRoute","switchMap","AssessmentCardComponent","SectionHeaderComponent","i0","ɵɵelement","ɵɵproperty","assessment_r1","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","OrganizationAssessmentsPageComponent_section_0_div_1_dr_assessment_card_8_Template","ɵɵadvance","organization_r2","name","focusAreas","join","ɵɵtextInterpolate","location","accreditationLevel","context_r3","OrganizationAssessmentsPageComponent_section_0_div_1_Template","notFound_r4","OrganizationAssessmentsPageComponent","route","facade","context$","paramMap","params","get","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","OrganizationAssessmentsPageComponent_Template","rf","ctx","OrganizationAssessmentsPageComponent_section_0_Template","OrganizationAssessmentsPageComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","OrganizationAssessmentsPageComponent_ng_template_4_Template","ɵɵpipeBind1","loading_r5","styles","changeDetection","DatePipe","action_r1","inputs","assessment","AssessmentCardComponent_Template","AssessmentCardComponent_li_21_Template","title","summary","ɵɵtextInterpolate1","progress","category","reviewer","ɵɵpipeBind2","updatedAt","actions","ctx_r0","badge","subtitle","ngContentSelectors","_c1","SectionHeaderComponent_Template","SectionHeaderComponent_span_2_Template","SectionHeaderComponent_p_5_Template","ɵɵprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}