{"version":3,"file":"609.js","mappings":"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","sources":["./src/app/feature/organizations/data-access/organizations.facade.ts","./src/app/shared/ui/assessment-card/assessment-card.component.ts","./src/app/shared/ui/assessment-card/assessment-card.component.html","./src/app/feature/organizations/ui/organization-assessments-page.component.ts","./src/app/feature/organizations/ui/organization-assessments-page.component.html","./src/app/shared/ui/section-header/section-header.component.ts","./src/app/shared/ui/section-header/section-header.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DocRosterApiService } from '../../../data-access/doc-roster-api.service';\nimport { Assessment, Organization } from '../../../shared/data-access/models/assessment.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OrganizationsFacade {\n  private readonly api = inject(DocRosterApiService);\n\n  getOrganization(id: string): Observable<Organization | undefined> {\n    return this.api.getOrganizations().pipe(map((organizations) => organizations.find((organization) => organization.id === id)));\n  }\n\n  getAssessments(id: string): Observable<Assessment[]> {\n    return this.api.getAssessmentsByOrganization(id);\n  }\n\n  getOrganizationContext(id: string): Observable<{ organization?: Organization; assessments: Assessment[] }> {\n    return combineLatest([this.getOrganization(id), this.getAssessments(id)]).pipe(\n      map(([organization, assessments]) => ({ organization, assessments }))\n    );\n  }\n}\n","import { DatePipe, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Assessment } from '../../data-access/models/assessment.model';\n\n@Component({\n    selector: 'dr-assessment-card',\n    standalone: true,\n    imports: [NgFor, DatePipe],\n    templateUrl: './assessment-card.component.html',\n    styleUrls: ['./assessment-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AssessmentCardComponent {\n  @Input({ required: true }) assessment!: Assessment;\n}\n","<article class=\"assessment-card surface\">\n  <header class=\"assessment-card__header\">\n    <div>\n      <h3>{{ assessment.title }}</h3>\n      <p>{{ assessment.summary }}</p>\n    </div>\n    <div class=\"assessment-card__progress\">\n      <span>{{ assessment.progress }}%</span>\n      <small>Progress</small>\n    </div>\n  </header>\n\n  <div class=\"assessment-card__meta\">\n    <span>{{ assessment.category }}</span>\n    <span>Reviewer · {{ assessment.reviewer }}</span>\n    <span>Updated {{ assessment.updatedAt | date: 'mediumDate' }}</span>\n  </div>\n\n  <ul class=\"assessment-card__actions\">\n    <li *ngFor=\"let action of assessment.actions\">{{ action }}</li>\n  </ul>\n</article>\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { AssessmentCardComponent } from '../../../shared/ui/assessment-card/assessment-card.component';\nimport { SectionHeaderComponent } from '../../../shared/ui/section-header/section-header.component';\nimport { OrganizationsFacade } from '../data-access/organizations.facade';\n\n@Component({\n    selector: 'dr-organization-assessments-page',\n    standalone: true,\n    imports: [AsyncPipe, NgIf, NgFor, SectionHeaderComponent, AssessmentCardComponent],\n    templateUrl: './organization-assessments-page.component.html',\n    styleUrls: ['./organization-assessments-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrganizationAssessmentsPageComponent {\n  private readonly route = inject(ActivatedRoute);\n  private readonly facade = inject(OrganizationsFacade);\n\n  readonly context$ = this.route.paramMap.pipe(\n    map((params) => params.get('id') ?? ''),\n    switchMap((id) => this.facade.getOrganizationContext(id))\n  );\n}\n","<section class=\"assessments section\" *ngIf=\"context$ | async as context; else loading\">\n  <div class=\"container\" *ngIf=\"context.organization as organization; else notFound\">\n    <dr-section-header\n      [title]=\"organization.name\"\n      [subtitle]=\"organization.focusAreas.join(' · ')\"\n      badge=\"Organization assessments\"\n    ></dr-section-header>\n\n    <div class=\"assessments__meta\">\n      <span>{{ organization.location }}</span>\n      <span>{{ organization.accreditationLevel }}</span>\n    </div>\n\n    <div class=\"assessments__grid\">\n      <dr-assessment-card *ngFor=\"let assessment of context.assessments\" [assessment]=\"assessment\"></dr-assessment-card>\n    </div>\n  </div>\n</section>\n\n<ng-template #loading>\n  <div class=\"container section\"><p>Loading organization…</p></div>\n</ng-template>\n\n<ng-template #notFound>\n  <div class=\"container section\"><p>Organization not found. Check the DocRoster network map.</p></div>\n</ng-template>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'dr-section-header',\n    standalone: true,\n    imports: [NgIf],\n    templateUrl: './section-header.component.html',\n    styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent {\n  @Input({ required: true }) title!: string;\n  @Input() subtitle?: string;\n  @Input() badge?: string;\n}\n","<div class=\"section-header\">\n  <div class=\"section-header__titles\">\n    <span *ngIf=\"badge\" class=\"section-header__badge\">{{ badge }}</span>\n    <h2 class=\"section-header__title\">{{ title }}</h2>\n    <p *ngIf=\"subtitle\" class=\"section-header__subtitle\">{{ subtitle }}</p>\n  </div>\n  <div class=\"section-header__actions\">\n    <ng-content select=\"[actions]\"></ng-content>\n  </div>\n</div>\n"],"names":["inject","combineLatest","map","DocRosterApiService","OrganizationsFacade","constructor","api","getOrganization","id","getOrganizations","pipe","organizations","find","organization","getAssessments","getAssessmentsByOrganization","getOrganizationContext","assessments","_","_staticBlock","factory","ɵfac","providedIn","DatePipe","NgFor","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","action_r1","AssessmentCardComponent","selectors","inputs","assessment","decls","vars","consts","template","AssessmentCardComponent_Template","rf","ctx","ɵɵtemplate","AssessmentCardComponent_li_21_Template","title","summary","ɵɵtextInterpolate1","progress","category","reviewer","ɵɵpipeBind2","updatedAt","ɵɵproperty","actions","styles","changeDetection","AsyncPipe","NgIf","ActivatedRoute","switchMap","SectionHeaderComponent","ɵɵelement","assessment_r1","OrganizationAssessmentsPageComponent_section_0_div_1_dr_assessment_card_8_Template","organization_r2","name","focusAreas","join","location","accreditationLevel","context_r3","OrganizationAssessmentsPageComponent_section_0_div_1_Template","notFound_r4","OrganizationAssessmentsPageComponent","route","facade","context$","paramMap","params","get","OrganizationAssessmentsPageComponent_Template","OrganizationAssessmentsPageComponent_section_0_Template","OrganizationAssessmentsPageComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","OrganizationAssessmentsPageComponent_ng_template_4_Template","ɵɵpipeBind1","loading_r5","ctx_r0","badge","subtitle","ngContentSelectors","_c1","SectionHeaderComponent_Template","SectionHeaderComponent_span_2_Template","SectionHeaderComponent_p_5_Template","ɵɵprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}